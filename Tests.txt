		compile "org.springframework.boot:spring-boot-starter-web"
		compile "org.springframework.boot:spring-boot-starter-jetty"
		compile "org.springframework.boot:spring-boot-starter-thymeleaf"
		compile "org.springframework.boot:spring-boot-starter-data-jpa"
		testCompile "org.springframework.boot:spring-boot-starter-test"
		['spring-core', 'spring-security-core'].each { exclude module: it }
		['spring-security-web', 'spring-web'].each { exclude module: it }
https://github.com/aogail/gwt-gradle-plugin
compile: compile libraries.slf4j_api, libraries.ant
		[group: 'guice', name: 'guice-2.0-no_aop'],
		compile project(':core')
		compile project(':data')
		compile project(':analysis')
		compile project(':tracker')
		compile group:'com.github.insubstantial', name:'trident', version:version
		compile group:'com.github.insubstantial', name:'substance', version: version
		compile group:'com.github.insubstantial', name:'flamingo', version: version
		compile group:'com.github.insubstantial', name:'trident', version:version
https://github.com/sugree/gwt-gradle-plugin
compile: compile libraries.slf4j_api, libraries.ant
		compile ':idea', ':jdom', ':openapi', ':util', ':extensions', ':annotations', ':Groovy'
		compile group: 'org.apache.wicket', name: 'wicket', version: wicketVersion
		compile group: 'org.apache.wicket', name: 'wicket-extensions', version: wicketVersion
		compile group: 'org.slf4j', name: 'slf4j-log4j12', version: slf4jVersion
		compile group: 'log4j', name: 'log4j', version: log4jVersion
		testCompile group: 'org.mortbay.jetty', name: 'jetty', version: jettyVersion
		testCompile group: 'org.mortbay.jetty', name: 'jetty-util', version: jettyVersion
		testCompile group: 'org.mortbay.jetty', name: 'jetty-management', version: jettyVersion
https://github.com/kellyrob99/Jenkins-api-tour
compile: compile spec.libraries.ivy
https://github.com/kellyrob99/Jenkins-api-tour
compile: compile spec.libraries.httpBuilder
		compile spec.libraries["${flavor}Cli".toString()]
https://github.com/kellyrob99/Jenkins-api-tour
testCompile: testCompile spec.libraries.spock
https://github.com/kellyrob99/Jenkins-api-tour
testCompile: testCompile spec.libraries.junit
https://github.com/tonybaines/GildedRose
compile: compile([
https://github.com/tonybaines/GildedRose
testCompile: testCompile([
https://github.com/tonybaines/GildedRose
runtime: runtime([])
		compile group: 'net.glowstone', name: 'glowkit', version: project.ext.bukkitVersion
		runtime project(':launcher')
		runtime project(':wrapper')
https://github.com/gaelyk/gradle-gaelyk-plugin
compile: compile localGroovy
apply from: 'https://github.com/thibaultdelor/gradle_cobertura/raw/master/ivy/gradle_cobertura/gradle_cobertura/1.0-rc4/coberturainit.gradle'
https://github.com/thibaultdelor/java-OracleSQL-dsl
testCompile: testCompile group: 'com.thibaultdelor', name: 'JunitSQLMatcher', version: '+'
https://github.com/silver2k/gwt-gradle-plugin
compile: compile libraries.slf4j_api, libraries.ant
		compile group:'com.github.insubstantial', name:'substance', version: version
		compile group:'org.swinglabs', name:'swingx', version: swingXVersion
		'lib/guava-r08.jar',
		'lib/protobuf-java-2.4.0a.jar',
		'lib/scalatest-1.3.jar',
		'lib/scalatest-1.3-tests.jar'
https://github.com/ajma/vision
compile: compile 'com.android.support:appcompat-v7:+'
		compile group:'', name: 'coherence', version: ''
		runtime project(':wrapper')
		runtime project(":installationBeacon")
apply from: "gradle/buildScanUserData.gradle"
apply from: "gradle/taskCacheBuildScanUserData.gradle"
apply from: "gradle/versioning.gradle"
apply from: "gradle/dependencies.gradle"
apply from: "gradle/wrapper.gradle"
apply from: "gradle/idea.gradle"
apply from: "gradle/eclipse.gradle"
apply from: "gradle/classycle.gradle"
apply from: "gradle/strictCompile.gradle"
apply from: "gradle/noDependencyResolutionDuringConfiguration.gradle"
apply from: "gradle/testSetup.gradle"
apply from: "gradle/fix-GRADLE-2492.gradle"
apply from: 'gradle/customM2Check.gradle'
apply from: "gradle/publicApi.gradle"
apply from: "gradle/updateReleasedVersions.gradle"
apply from: "gradle/dependenciesCheck.gradle"
apply from: "$rootDir/gradle/groovyProject.gradle"
apply from: "$rootDir/gradle/testWithUnknownOS.gradle"
apply from: "$rootDir/gradle/java9.gradle"
apply from: "$rootDir/gradle/publish.gradle"
apply from: "$rootDir/gradle/codeQuality.gradle"
apply from: "gradle/ciReporting.gradle"
https://github.com/ajoberstar/gradle
runtime: runtime patchedExternalModules
		compile name: 'colorpicker'
		compile name: 'fstreem'
https://github.com/danielglauser/remote-actor-prototype
compile: compile 'se.scalablesolutions.akka:akka-actor:' + akkaVersion
https://github.com/danielglauser/remote-actor-prototype
compile: compile 'se.scalablesolutions.akka:akka-remote:' + akkaVersion
https://github.com/danielglauser/remote-actor-prototype
compile: compile 'se.scalablesolutions.akka:akka-camel:' + akkaVersion
https://github.com/danielglauser/remote-actor-prototype
testCompile: testCompile 'se.scalablesolutions.akka:akka:' + akkaVersion
https://github.com/danielglauser/remote-actor-prototype
testCompile: testCompile 'se.scalablesolutions.akka:akka-remote:' + akkaVersion
https://github.com/danielglauser/remote-actor-prototype
testCompile: testCompile 'se.scalablesolutions.akka:akka-camel:' + akkaVersion
https://github.com/danielglauser/remote-actor-prototype
compile: compile 'org.scala-lang:scala-library:' + scalaVersion
https://github.com/danielglauser/remote-actor-prototype
testCompile: testCompile 'org.scala-lang:scala-library:' +scalaVersion
		runtime project(':launcher')
		runtime project(':wrapper')
		testCompile group: 'junit', name: 'junit', version: hasProperty('junitVersion') ? junitVersion : '4.8.2'
		testCompile group: 'org.spockframework', name: 'spock-core', version: hasProperty('spockVersion') ? spockVersion : '0.5-groovy-1.7'
		compile group: 'org.jboss.netty', name: 'netty', version: hasProperty('nettyVersion') ? nettyVersion : '3.1.5.GA'
		compile "org.springframework.boot:spring-boot-starter-logging"
		compile "org.springframework.boot:spring-boot-autoconfigure"
		compile "org.grails:grails-core"
		compile "org.springframework.boot:spring-boot-starter-actuator"
		compile "org.springframework.boot:spring-boot-starter-tomcat"
		compile "org.grails:grails-dependencies"
		compile "org.grails:grails-web-boot"
		testCompile "org.grails:grails-plugin-testing"
apply from: 'variables.gradle'
apply from: 'dependencies.gradle'
https://github.com/aestasit/cult-of-klang
compile: compile akkaLibraries
		testCompile group: 'junit', name: 'junit', version: hasProperty('junitVersion') ? junitVersion : '4.8.2'
		testCompile group: 'org.spockframework', name: 'spock-core', version: hasProperty('spockVersion') ? spockVersion : '0.5-groovy-1.7'
		compile group: 'org.jboss.netty', name: 'netty', version: hasProperty('nettyVersion') ? nettyVersion : '3.1.5.GA'
		runtime project(':wrapper')
		runtime project(":installationBeacon")
apply from: "gradle/buildScanUserData.gradle"
apply from: "gradle/taskCacheBuildScanUserData.gradle"
apply from: "gradle/versioning.gradle"
apply from: "gradle/dependencies.gradle"
apply from: "gradle/wrapper.gradle"
apply from: "gradle/idea.gradle"
apply from: "gradle/eclipse.gradle"
apply from: "gradle/classycle.gradle"
apply from: "gradle/strictCompile.gradle"
apply from: "gradle/noDependencyResolutionDuringConfiguration.gradle"
apply from: "gradle/testSetup.gradle"
apply from: "gradle/fix-GRADLE-2492.gradle"
apply from: 'gradle/customM2Check.gradle'
apply from: "gradle/publicApi.gradle"
apply from: "gradle/updateReleasedVersions.gradle"
apply from: "gradle/dependenciesCheck.gradle"
apply from: "$rootDir/gradle/groovyProject.gradle"
apply from: "$rootDir/gradle/testWithUnknownOS.gradle"
apply from: "$rootDir/gradle/java9.gradle"
apply from: "$rootDir/gradle/publish.gradle"
apply from: "$rootDir/gradle/codeQuality.gradle"
apply from: "gradle/ciReporting.gradle"
https://github.com/nskvortsov/gradle
runtime: runtime patchedExternalModules
		provided 'org.springframework.boot:spring-boot-starter-logging'
		provided "org.springframework.boot:spring-boot-starter-actuator"
		provided "org.springframework.boot:spring-boot-autoconfigure"
		provided "org.springframework.boot:spring-boot-starter-tomcat"
		provided "org.grails:grails-web-boot"
		provided "org.grails:grails-dependencies"
		provided 'org.springframework.boot:spring-boot-starter-logging'
		provided "org.springframework.boot:spring-boot-autoconfigure"
		provided "org.springframework.boot:spring-boot-starter-tomcat"
		provided "org.grails:grails-web-boot"
		provided "org.grails:grails-dependencies"
		testCompile "org.grails:grails-plugin-testing"
		compile "org.springframework.boot:spring-boot-starter-logging"
		compile "org.springframework.boot:spring-boot-autoconfigure"
		compile "org.grails:grails-core"
		compile "org.springframework.boot:spring-boot-starter-actuator"
		compile "org.springframework.boot:spring-boot-starter-tomcat"
		compile "org.grails:grails-dependencies"
		compile "org.grails:grails-web-boot"
		compile "org.grails.plugins:cache"
		compile "org.grails.plugins:scaffolding"
		provided "org.grails:grails-plugin-services"
		provided "org.grails:grails-plugin-domain-class"
		testCompile "org.grails:grails-plugin-testing"
		testCompile "org.grails.plugins:geb"
		compile project(':xmlprocessor')
		runtime project(':launcher')
		runtime project(':wrapper')
		runtime project(':launcher')
		runtime project(':wrapper')
		runtime project(':launcher')
		provided 'org.springframework.boot:spring-boot-starter-logging'
		provided "org.springframework.boot:spring-boot-starter-actuator"
		provided "org.springframework.boot:spring-boot-autoconfigure"
		provided "org.springframework.boot:spring-boot-starter-tomcat"
		provided "org.grails:grails-web-boot"
		provided "org.grails:grails-dependencies"
		testCompile "org.grails:grails-plugin-testing"
		provided 'org.springframework.boot:spring-boot-starter-logging'
		provided 'org.springframework.boot:spring-boot-starter-actuator'
		provided 'org.springframework.boot:spring-boot-autoconfigure'
		provided 'org.springframework.boot:spring-boot-starter-tomcat'
		provided 'org.grails:grails-web-boot'
		provided 'org.grails:grails-dependencies'
		testCompile 'org.grails:grails-plugin-testing'
		testCompile "org.grails:grails-plugin-testing"
		compile ':boot', ':util', ':annotations', ':openapi', ':idea', ':extensions'
apply from: signing
https://github.com/piusvelte/wapdroid
compile: compile 'com.android.support:support-annotations:+'
apply from: signing
https://github.com/piusvelte/sonet
compile: compile 'com.android.support:support-annotations:+'
https://github.com/zgrossbart/gwt-gradle-plugin
compile: compile libraries.slf4j_api, libraries.ant
		compile "org.springframework.boot:spring-boot-starter-logging"
		compile "org.springframework.boot:spring-boot-autoconfigure"
		compile "org.grails:grails-core"
		compile "org.springframework.boot:spring-boot-starter-actuator"
		compile "org.springframework.boot:spring-boot-starter-tomcat"
		compile "org.grails:grails-dependencies"
		compile "org.grails:grails-web-boot"
		compile "org.grails.plugins:cache"
		compile "org.grails.plugins:scaffolding"
		provided "org.grails:grails-plugin-services"
		provided "org.grails:grails-plugin-domain-class"
		testCompile "org.grails:grails-plugin-testing"
		testCompile "org.grails.plugins:geb"
https://github.com/robmcguinness/wicket-stateless
compile: compile	'org.apache.wicket:wicket-core:'+libz.wicket,
https://github.com/robmcguinness/wicket-stateless
compile: 'org.apache.wicket:wicket-devutils:'+libz.wicket
https://github.com/robmcguinness/wicket-stateless
compile: compile "org.eclipse.jetty:jetty-webapp:"+libz.jetty
https://github.com/robmcguinness/wicket-stateless
compile: compile	'ch.qos.logback:logback-classic:'+libz.logback,
https://github.com/robmcguinness/wicket-stateless
compile: 'org.slf4j:log4j-over-slf4j:'+libz.log4j
https://github.com/robmcguinness/wicket-stateless
compile: compile 'ro.isdc.wro4j:wro4j-core:'+libz.wro4j
https://github.com/robmcguinness/wicket-stateless
compile: compile 'com.sun.jersey:jersey-core:'+libz.jersey,
https://github.com/robmcguinness/wicket-stateless
compile: 'com.sun.jersey:jersey-client:'+libz.jersey,
https://github.com/robmcguinness/wicket-stateless
compile: 'com.sun.jersey:jersey-json:'+libz.jersey
https://github.com/robmcguinness/wicket-stateless
compile: compile 'com.google.guava:guava:'+libz.guava
https://github.com/robmcguinness/wicket-stateless
testCompile: testCompile 'junit:junit:'+libz.junit
		runtime project(':launcher')
		compile group: 'org.bukkit', name: 'bukkit', version: project.ext.bukkitVersion
apply from: "external-dependencies.gradle"
apply from: "ide-support.gradle"
https://github.com/seanjreilly/httpServletExample
providedCompile: providedCompile servletApi
apply from: "external-dependencies.gradle"
apply from: "ide-support.gradle"
https://github.com/seanjreilly/httpServletExample
testCompile: testCompile junit, mockito, embeddedTomcat
https://github.com/pease/pease
compile: compile project(':spock:spock-core')
		compile group: 'org.springframework', name: 'spring-context', version: SPRING_VERSION
		compile group: 'org.springframework', name: 'spring-core', version: SPRING_VERSION
		compile group: 'org.springframework', name: 'spring-beans', version: SPRING_VERSION
		compile group: 'org.springframework', name: 'spring-asm', version: SPRING_VERSION
		compile group: 'org.springframework', name: 'spring-expression', version: SPRING_VERSION
		compile group: 'org.springframework', name: 'spring-web', version: SPRING_VERSION
		compile group: 'org.springframework', name: 'spring-webmvc', version: SPRING_VERSION
		compile group: 'org.springframework.integration', name: 'spring-integration-core', version: SPRING_INTEGRATION_VERSION
		testCompile group: 'org.springframework', name: 'spring-test', version: SPRING_VERSION
		compile project(':cgh-definitions-domain')
		compile group: 'org.cloudfoundry', name: 'cloudfoundry-runtime', version: CLOUD_FOUNDRY_VERSION
https://github.com/jpace/jagol
compile: compile 'org.incava:ijdk:+'
		compile name:'libdb4.8-java-4.8.30'
		compile group: 'org.springframework', name: 'spring-webmvc', version:springVersion
		compile group: 'org.springframework', name: 'spring-context', version:springVersion
		compile group: 'org.springframework', name: 'spring-test', version:springVersion
		compile([project(':lib_config_base').sourceSets.test.output],
		compile project(':elasticsearch')
		compile group:"org.apache.tapestry", name :"tapestry-core", version:tapestryVersion
		testCompile group:"org.apache.tapestry", name :"tapestry-test", version:tapestryVersion
		compile group:"org.apache.tapestry", name :"tapestry-core", version:tapestryVersion
		testCompile group:"org.apache.tapestry", name :"tapestry-test", version:tapestryVersion
		compile project(':AsyncLoaders')
		compile project(':slidingmenu')
		compile project(':parchment')
		compile project(':musicmetamodel')
		compile group: 'commons-io', name: 'commons-io', version: commonsIOVersion
		compile group: 'org.codehaus.jackson', name: 'jackson-core-asl', version: jacksonVersion
		compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: jacksonVersion
		testCompile group: 'junit', name: 'junit-dep', version: junitVersion
		testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: hamcrestVersion
		testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: hamcrestVersion
		compile project(':musicmetamodel')
		provided 'org.springframework.boot:spring-boot-starter-logging'
		provided "org.springframework.boot:spring-boot-starter-actuator"
		provided "org.springframework.boot:spring-boot-autoconfigure"
		provided "org.springframework.boot:spring-boot-starter-tomcat"
		provided "org.grails:grails-web-boot"
		provided "org.grails:grails-dependencies"
		testCompile "org.grails:grails-plugin-testing"
		compile "org.springframework.boot:spring-boot-starter-logging"
		compile "org.springframework.boot:spring-boot-starter-actuator"
		compile "org.springframework.boot:spring-boot-autoconfigure"
		compile "org.springframework.boot:spring-boot-starter-tomcat"
		compile "org.grails:grails-dependencies"
		compile "org.grails:grails-web-boot"
		compile "org.grails.plugins:hibernate"
		compile "org.grails.plugins:cache"
		compile "org.hibernate:hibernate-ehcache"
		compile "org.grails.plugins:scaffolding"
		runtime "org.grails.plugins:asset-pipeline"
		testCompile "org.grails:grails-plugin-testing"
		testCompile "org.grails.plugins:geb"
		provided "org.grails:grails-core"
		testCompile "org.grails:grails-plugin-testing"
		compile group: 'org.apache.wicket', name: 'wicket', version: wicket_version
		compile group: 'org.apache.wicket', name: 'wicket-extensions', version: wicket_version
		compile group: 'org.apache.wicket', name: 'wicket-ioc', version: wicket_version
		compile group: 'org.apache.wicket', name: 'wicket-spring', version: wicket_version
https://github.com/jpace/qualog
compile: compile 'org.incava:ijdk:+'
		runtime project(':launcher')
		runtime project(':wrapper')
https://github.com/splix/garfa
compile: compile 'com.google.appengine:appengine-api-1.0-sdk:'+gaeVersion
https://github.com/splix/garfa
compile: compile 'org.codehaus.groovy:groovy-all:' + groovyVersion
https://github.com/splix/garfa
compile: compile 'org.slf4j:slf4j-log4j12:' + slf4jVersion
https://github.com/splix/garfa
testCompile: testCompile 'com.google.appengine:appengine-testing:'+gaeVersion
https://github.com/splix/garfa
testCompile: testCompile 'com.google.appengine:appengine-api-stubs:'+gaeVersion
https://github.com/splix/garfa
testCompile: testCompile ('org.spockframework:spock-core:'+spockVersion) {
https://github.com/jbarop/gradle-gwt-plugin
testCompile: testCompile libraries.junit, libraries.jmock, libraries.slf4j_jdk14
		compile group: 'org.apache.tapestry', name: 'tapestry5-annotations', version: tapestryVersion
		compile group: 'org.apache.tapestry', name: 'tapestry-core', version: tapestryVersion
		compile group: 'org.apache.tapestry', name: 'tapestry-func', version: tapestryVersion
		compile group: 'org.apache.tapestry', name: 'tapestry-hibernate', version: tapestryVersion
		compile group: 'org.apache.tapestry', name: 'tapestry-hibernate-core', version: tapestryVersion
		compile group: 'org.apache.tapestry', name: 'tapestry-ioc', version: tapestryVersion
		compile group: 'org.apache.tapestry', name: 'tapestry-json', version: tapestryVersion
		compile group: 'org.apache.tapestry', name: 'tapestry-upload', version: tapestryVersion
		compile group: 'org.apache.tapestry', name: 'tapestry-test', version: tapestryVersion, transitive: false
		compile group: 'org.apache.tapestry', name: 'tapestry-yuicompressor', version: tapestryVersion
https://github.com/dyreschlock/schlock-website
compile: compile('org.apache.tapestry:tapestry-yuicompressor:' + tapestryVersion) {
https://github.com/brucerobbins/s4-piper-commlayer_experiment
compile: compile( libraries.guava )
https://github.com/brucerobbins/s4-piper-commlayer_experiment
compile: compile( libraries.guice )
https://github.com/brucerobbins/s4-piper-commlayer_experiment
compile: compile( libraries.guice_assist )
https://github.com/brucerobbins/s4-piper-commlayer_experiment
compile: compile( libraries.json)
https://github.com/brucerobbins/s4-piper-commlayer_experiment
compile: compile( libraries.kryo)
https://github.com/brucerobbins/s4-piper-commlayer_experiment
compile: compile( libraries.netty)
https://github.com/brucerobbins/s4-piper-commlayer_experiment
compile: compile( libraries.gson)
https://github.com/brucerobbins/s4-piper-commlayer_experiment
compile: compile( libraries.slf4j )
https://github.com/brucerobbins/s4-piper-commlayer_experiment
compile: compile( libraries.logback_core )
https://github.com/brucerobbins/s4-piper-commlayer_experiment
compile: compile( libraries.logback_classic )
https://github.com/brucerobbins/s4-piper-commlayer_experiment
compile: compile( libraries.commons_io )
https://github.com/brucerobbins/s4-piper-commlayer_experiment
compile: compile( libraries.commons_config )
https://github.com/brucerobbins/s4-piper-commlayer_experiment
compile: compile( libraries.commons_codec )
https://github.com/brucerobbins/s4-piper-commlayer_experiment
compile: compile( libraries.commons_httpclient )
https://github.com/brucerobbins/s4-piper-commlayer_experiment
compile: compile( libraries.commons_coll )
https://github.com/brucerobbins/s4-piper-commlayer_experiment
compile: compile( libraries.ejml )
https://github.com/brucerobbins/s4-piper-commlayer_experiment
compile: compile( libraries.jcip )
https://github.com/brucerobbins/s4-piper-commlayer_experiment
testCompile: testCompile( libraries.junit )
		runtime project(':launcher')
https://github.com/anandnalya/s4-piper
compile: compile( libraries.guice )
https://github.com/anandnalya/s4-piper
compile: compile( libraries.json)
https://github.com/anandnalya/s4-piper
compile: compile( libraries.gson)
https://github.com/anandnalya/s4-piper
compile: compile( libraries.slf4j )
https://github.com/anandnalya/s4-piper
compile: compile( libraries.logback_core )
https://github.com/anandnalya/s4-piper
compile: compile( libraries.logback_classic )
https://github.com/anandnalya/s4-piper
compile: compile( libraries.commons_io )
https://github.com/anandnalya/s4-piper
compile: compile( libraries.commons_config )
https://github.com/anandnalya/s4-piper
compile: compile( libraries.commons_codec )
https://github.com/anandnalya/s4-piper
compile: compile( libraries.commons_httpclient )
https://github.com/anandnalya/s4-piper
compile: compile( libraries.ejml )
https://github.com/anandnalya/s4-piper
compile: compile( libraries.jcip )
https://github.com/anandnalya/s4-piper
testCompile: testCompile( libraries.junit )
		testCompile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: seleniumVersion
		compile project(':mongo-java-server-core')
		compile project(':mongo-java-server-memory-backend')
https://github.com/dguerin/s4-piper
compile: compile( libraries.guice )
https://github.com/dguerin/s4-piper
compile: compile( libraries.json)
https://github.com/dguerin/s4-piper
compile: compile( libraries.gson)
https://github.com/dguerin/s4-piper
compile: compile( libraries.slf4j )
https://github.com/dguerin/s4-piper
compile: compile( libraries.logback_core )
https://github.com/dguerin/s4-piper
compile: compile( libraries.logback_classic )
https://github.com/dguerin/s4-piper
compile: compile( libraries.commons_io )
https://github.com/dguerin/s4-piper
compile: compile( libraries.commons_config )
https://github.com/dguerin/s4-piper
compile: compile( libraries.commons_codec )
https://github.com/dguerin/s4-piper
compile: compile( libraries.commons_httpclient )
https://github.com/dguerin/s4-piper
compile: compile( libraries.ejml )
https://github.com/dguerin/s4-piper
compile: compile( libraries.jcip )
https://github.com/dguerin/s4-piper
testCompile: testCompile( libraries.junit )
		[ group: 'net.java.dev.jna',               name: 'jna',                  version: jnaVersion ],
		[ group: 'org.scala-lang',                 name: 'scala-library',        version: scalaVersion ],
		[ group: 'org.slf4j',                      name: 'jcl-over-slf4j',       version: slf4jVersion ],
		[ group: 'ch.qos.logback',                 name: 'logback-classic',      version: logbackVersion ]
		[ group: 'junit',                          name: 'junit',                version: junitVersion ]
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
apply from: "$commonBuildPath/repositories.gradle"
apply from: "$commonBuildPath/plugin-build.gradle"
https://github.com/bmoussaud/extended-was-plugin
compile: compile deps.overthere
apply from: "$commonBuildPath/repositories.gradle"
apply from: "$commonBuildPath/plugin-build.gradle"
https://github.com/bmoussaud/extended-was-plugin
compile: compile deps.velocity
apply from: "$commonBuildPath/repositories.gradle"
apply from: "$commonBuildPath/plugin-build.gradle"
https://github.com/bmoussaud/extended-was-plugin
compile: compile deps.guava
apply from: "$commonBuildPath/repositories.gradle"
apply from: "$commonBuildPath/plugin-build.gradle"
https://github.com/bmoussaud/extended-was-plugin
compile: compile deps.overthere
apply from: "$commonBuildPath/repositories.gradle"
apply from: "$commonBuildPath/plugin-build.gradle"
https://github.com/bmoussaud/extended-was-plugin
compile: compile deps.spring_core
apply from: "$commonBuildPath/repositories.gradle"
apply from: "$commonBuildPath/plugin-build.gradle"
https://github.com/bmoussaud/extended-was-plugin
compile: compile deps.commons_lang, deps.commons_io, deps.commons_collections, deps.commons_beanutils
apply from: "$commonBuildPath/repositories.gradle"
apply from: "$commonBuildPath/plugin-build.gradle"
https://github.com/bmoussaud/extended-was-plugin
testCompile: testCompile deps.hamcrest_all
apply from: "$commonBuildPath/repositories.gradle"
apply from: "$commonBuildPath/plugin-build.gradle"
https://github.com/bmoussaud/extended-was-plugin
testCompile: testCompile deps.itest_support
apply from: "$commonBuildPath/repositories.gradle"
apply from: "$commonBuildPath/plugin-build.gradle"
https://github.com/bmoussaud/extended-was-plugin
testCompile: testCompile deps.spring_beans
		runtime project(':launcher')
https://github.com/MagneticMule/Toponimo
compile: compile project(':android-sdk-macosx:extras:google:google_play_services:libproject:google-play-services_lib')
https://github.com/MagneticMule/Toponimo
compile: compile project(':Dropbox:Android Libraries:actionbarsherlock')
		compile project(':artcodes-scanner')
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		compile project(":funk-core")
		compile project(":funk-matchers")
		compile project(":funk-jackson")
		compile project(":funk-core")
		compile project(":funk-matchers")
		compile name: 'Agent'
		compile project(':framework')
		testCompile project(':framework').configurations.testCompile.allDependencies
		provided 'org.springframework.boot:spring-boot-starter-logging'
		provided "org.springframework.boot:spring-boot-starter-actuator"
		provided "org.springframework.boot:spring-boot-autoconfigure"
		provided "org.springframework.boot:spring-boot-starter-tomcat"
		provided "org.grails:grails-web-boot"
		provided "org.grails:grails-dependencies"
		testCompile "org.grails:grails-plugin-testing"
		compile group: 'org.jetbrains.kotlin', name: 'kotlin-compiler-embeddable', version: kotlinVersion
		compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: kotlinVersion
		compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlinVersion
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
https://github.com/willuhn/jameica
compile: compile 'org.apache.xmlrpc:xmlrpc-client:+'
https://github.com/willuhn/jameica
compile: compile 'org.bouncycastle:bcprov-jdk15on:+'
https://github.com/willuhn/jameica
compile: compile 'org.bouncycastle:bcpkix-jdk15on:+'
https://github.com/willuhn/jameica
compile: compile 'com.h2database:h2:+'
https://github.com/willuhn/jameica
compile: compile 'commons-cli:commons-cli:+'
https://github.com/willuhn/jameica
compile: compile 'com.mckoi:mckoisqldb:+'
https://github.com/willuhn/jameica
compile: compile 'be.cyberelf.nanoxml:nanoxml:+'
https://github.com/willuhn/jameica
compile: compile 'org.apache.velocity:velocity:+'
https://github.com/willuhn/jameica.webadmin
compile: compile 'org.slf4j:slf4j-jdk14:+'
https://github.com/willuhn/jameica.webadmin
compile: compile 'commons-fileupload:commons-fileupload:+'
https://github.com/willuhn/jameica.webadmin
compile: compile 'org.json:json:+'
		runtime project(':launcher')
		compile project(':elasticsearch')
		compile springDependencies("beans", "core", "context", "test")
		testCompile springDependencies("test")
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
https://github.com/leoneu/s4-piper-app
compile: compile( module ) //{ transitive = false }
https://github.com/leoneu/s4-piper-app
compile: compile( libraries.jakarta_regexp)
https://github.com/leoneu/s4-piper-app
compile: compile( libraries.ejml)
https://github.com/leoneu/s4-piper-app
compile: compile( libraries.slf4j )
https://github.com/leoneu/s4-piper-app
compile: compile( libraries.logback_core )
https://github.com/leoneu/s4-piper-app
compile: compile( libraries.logback_classic )
https://github.com/leoneu/s4-piper-app
compile: compile( libraries.commons_io )
https://github.com/leoneu/s4-piper-app
compile: compile( libraries.commons_config )
https://github.com/leoneu/s4-piper-app
compile: compile( libraries.commons_coll )
https://github.com/leoneu/s4-piper-app
compile: compile( libraries.jcip )
https://github.com/leoneu/s4-piper-app
testCompile: testCompile( libraries.junit )
		runtime project(':launcher')
		runtime project(':launcher')
		runtime project(':launcher')
		runtime project(':launcher')
		runtime project(':wrapper')
apply from: localGradleFile
https://github.com/unsaved/xcsde-rngval
compile: compile([
apply from: localGradleFile
https://github.com/unsaved/xcsde-rngval
runtime: runtime([
		runtime project(':launcher')
		compile libraries.'slf4j-api'
		compile libraries.'bcpg'
		compile "org.springframework.boot:spring-boot-starter-logging"
		compile "org.springframework.boot:spring-boot-autoconfigure"
		compile "org.grails:grails-core"
		compile "org.springframework.boot:spring-boot-starter-actuator"
		compile "org.springframework.boot:spring-boot-starter-tomcat"
		compile "org.grails:grails-dependencies"
		compile "org.grails:grails-web-boot"
		compile "org.grails.plugins:cache"
		compile "org.grails.plugins:scaffolding"
		compile 'org.grails.plugins:cache'
		provided "org.grails:grails-plugin-services"
		provided "org.grails:grails-plugin-domain-class"
		testCompile "org.grails:grails-plugin-testing"
		testCompile "org.grails.plugins:geb"
		[group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion],
		[group: 'org.apache.commons', name: 'commons-exec', version: commonsExecVersion],
		[group: 'net.socialchange.doctype', name: 'doctype-changer', version: doctypeChangerVersion],
		[group: 'xml-resolver', name: 'xml-resolver', version: xmlResolverVersion],
		[group: 'xerces', name: 'xercesImpl', version: xercesVersion],
		[group: 'saxon', name: 'saxon', version: saxonVersion],
		[group: 'org.codehaus.plexus', name: 'plexus-utils', version: plexusUtilsVersion],
		[group: 'org.apache.xmlgraphics', name: 'fop', version: fopVersion],
		[group: 'org.apache.xmlgraphics', name: 'xmlgraphics-commons', version: xmlGraphicsCommonsVersion],
		[group: 'org.apache.avalon.framework', name: 'avalon-framework-api', version: avalonVersion],
		[group: 'org.apache.avalon.framework', name: 'avalon-framework-impl', version: avalonVersion],
		[group: 'jdom', name: 'jdom', version: jdomVersion],
		[group: 'junit', name: 'junit', version: junitVersion],
		[group: 'org.slf4j', name: 'jcl-over-slf4j', version: slf4jVersion],
		[group: 'org.slf4j', name: 'slf4j-simple', version: slf4jVersion]
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
https://github.com/danielpassos/call4paperz-android
compile: compile 'com.android.support:appcompat-v7:+'
		runtime project(':launcher')
		runtime project(':launcher')
		compile project(':foggy-persistence')
		compile project(':foggy-core')
		compile project(':foggy-web')
		runtime project(':launcher')
		compile libraries.'slf4j-api'
		compile libraries.'bcpg'
		runtime project(':launcher')
		provided "org.springframework.boot:spring-boot-starter-actuator"
		provided "org.springframework.boot:spring-boot-autoconfigure"
		provided "org.springframework.boot:spring-boot-starter-tomcat"
		provided "org.grails:grails-web-boot"
		provided "org.grails:grails-dependencies"
		testCompile "org.grails:grails-plugin-testing"
		compile group: 'edu.mayo.cts2.framework', name: 'service', version: frameworkVersion
		compile group: 'edu.mayo.cts2.framework', name: 'core', version: frameworkVersion
		runtime project(':launcher')
		compile   ( 'org.spockframework:spock-core:0.6-groovy-1.8-25112011' ) { exclude group: 'org.codehaus.groovy' }
		compile group: 'org.springframework', name: 'spring-context', version: springVersion
		testCompile group: 'junit', name: 'junit', version: 4.10
		testCompile group: 'org.springframework', name: 'spring-test', version: springVersion
		runtime project(':launcher')
		runtime project(':wrapper')
		compile   ( 'org.spockframework:spock-core:0.6-groovy-1.8-25112011' ) { exclude group: 'org.codehaus.groovy' }
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		testCompile project(':groovy-macro')
		compile group: 'org.hibernate', name: 'hibernate-core', version: versions['hibernate-core']
		compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: versions['hibernate-core']
		runtime group: 'org.hibernate', name: 'hibernate-c3p0', version: versions['hibernate-core']
		compile group: 'org.hibernate', name: 'hibernate-core', version: versions['hibernate-core']
		compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: versions['hibernate-core']
		compile group: 'org.hibernate', name: 'hibernate-c3p0', version: versions['hibernate-core']
		compile("gripes:gripersist:${versions['gripersist']}")
		compile group: 'org.hibernate', name: 'hibernate-core', version: versions['hibernate-core']
		compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: versions['hibernate-core']
		runtime group: 'org.hibernate', name: 'hibernate-c3p0', version: versions['hibernate-core']
		compile group: 'gripes', name: 'gripersist', version: versions['gripersist']
		compile group: 'gripes', name: 'gripes-web', version: versions['gripes-web']
		compile group: 'org.hibernate', name: 'hibernate-core', version: versions['hibernate-core']
		compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: versions['hibernate-core']
		runtime group: 'org.hibernate', name: 'hibernate-c3p0', version: versions['hibernate-core']
https://github.com/leoneu/s4-counter
compile: compile( module ) //{ transitive = false }
https://github.com/leoneu/s4-counter
compile: compile( libraries.slf4j )
https://github.com/leoneu/s4-counter
compile: compile( libraries.logback_core )
https://github.com/leoneu/s4-counter
compile: compile( libraries.logback_classic )
https://github.com/leoneu/s4-counter
compile: compile( libraries.commons_io )
https://github.com/leoneu/s4-counter
compile: compile( libraries.commons_config )
https://github.com/leoneu/s4-counter
compile: compile( libraries.commons_coll )
https://github.com/leoneu/s4-counter
compile: compile( libraries.jcip )
https://github.com/leoneu/s4-counter
testCompile: testCompile( libraries.junit )
		compile project(':gripes-ast')
		compile project(':gripes-web')
		compile project(':gripersist')
		compile project(':gripes-ast')
		compile project(':gripes-web')
		compile project(':gripersist')
		runtime project(':launcher')
		runtime project(':wrapper')
https://github.com/leoneu/s4-showtime
compile: compile( module ) //{ transitive = false }
https://github.com/leoneu/s4-showtime
compile: compile( libraries.slf4j )
https://github.com/leoneu/s4-showtime
compile: compile( libraries.logback_core )
https://github.com/leoneu/s4-showtime
compile: compile( libraries.logback_classic )
https://github.com/leoneu/s4-showtime
compile: compile( libraries.commons_io )
https://github.com/leoneu/s4-showtime
compile: compile( libraries.commons_config )
https://github.com/leoneu/s4-showtime
compile: compile( libraries.commons_coll )
https://github.com/leoneu/s4-showtime
compile: compile( libraries.jcip )
https://github.com/leoneu/s4-showtime
testCompile: testCompile( libraries.junit )
		compile "org.springframework.boot:spring-boot-starter-logging"
		compile "org.springframework.boot:spring-boot-autoconfigure"
		compile "org.grails:grails-core"
		compile "org.springframework.boot:spring-boot-starter-actuator"
		compile "org.springframework.boot:spring-boot-starter-tomcat"
		compile "org.grails:grails-dependencies"
		compile "org.grails:grails-web-boot"
		provided "org.grails:grails-plugin-services"
		testCompile "org.grails:grails-plugin-testing"
		compile project(':rosjava')
https://github.com/derianto/Adaptive-Layout-Engine
compile: compile entry.value
		runtime project(':launcher')
		runtime project(':wrapper')
		compile group: "de.prob", name: "answerparser", version: parser_version , changing: true
		compile group: "de.prob", name: "bparser", version: parser_version , changing: true
		compile group: "de.prob", name: "cliparser", version: parser_version , changing: true
		compile group: "de.prob", name: "ltlparser", version: parser_version , changing: true
		compile group: "de.prob", name: "parserbase", version: parser_version , changing: true
		compile group: "de.prob", name: "prologlib", version: parser_version , changing: true
		compile group: "de.prob", name: "unicode", version: parser_version , changing: true
		runtime project(':launcher')
		runtime project(':wrapper')
		runtime project(':launcher')
		runtime project(':launcher')
		compile "org.springframework.boot:spring-boot-starter-logging"
		compile "org.springframework.boot:spring-boot-autoconfigure"
		compile "org.grails:grails-core"
		compile "org.springframework.boot:spring-boot-starter-actuator"
		compile "org.springframework.boot:spring-boot-starter-tomcat"
		compile "org.grails:grails-dependencies"
		compile "org.grails:grails-web-boot"
		provided "org.grails:grails-plugin-services"
		provided "org.grails:grails-plugin-domain-class"
		testCompile "org.grails:grails-plugin-testing"
		runtime project(':launcher')
		'jersey-core',
		'jersey-server',
		'jersey-servlet'
		'jetty-server',
		'jetty-servlet',
		'jetty-plus'
		providedCompile ("org.eclipse.jetty:$it:8.+") { exclude group: 'org.eclipse.jetty.orbit' }
		testCompile ('com.sun.jersey.jersey-test-framework:jersey-test-framework-core:1.+') { exclude group: 'javax.servlet' }
https://github.com/jsteggink/heritrix-cassandra
compile: compile 'org.archive.heritrix:heritrix-commons:' + heritrix_version
https://github.com/jsteggink/heritrix-cassandra
compile: compile 'org.archive.heritrix:heritrix-engine:' + heritrix_version
https://github.com/jsteggink/heritrix-cassandra
compile: compile 'org.archive.heritrix:heritrix-modules:' + heritrix_version
https://github.com/jsteggink/heritrix-cassandra
compile: compile 'org.apache.cassandra:cassandra-all:' + cassandra_version
		compile "org.springframework.boot:spring-boot-starter-logging"
		compile "org.springframework.boot:spring-boot-autoconfigure"
		compile "org.grails:grails-core"
		compile "org.springframework.boot:spring-boot-starter-actuator"
		compile "org.springframework.boot:spring-boot-starter-tomcat"
		compile "org.grails:grails-dependencies"
		compile "org.grails:grails-web-boot"
		compile "org.grails.plugins:scaffolding"
		provided "org.grails:grails-plugin-services"
		provided "org.grails:grails-plugin-domain-class"
		testCompile "org.grails:grails-datastore-gorm-test"
		testCompile "org.grails:grails-plugin-testing"
		testCompile "org.grails.plugins:geb"
		runtime project(':launcher')
		runtime project(':launcher')
		runtime project(':launcher')
		runtime project(':wrapper')
https://github.com/Vayana/gradle-demo
compile: compile     'org.scala-lang:scala-library:' + scalaVersion,
		runtime project(':launcher')
		provided 'org.springframework.boot:spring-boot-starter-logging'
		provided "org.springframework.boot:spring-boot-starter-actuator"
		provided "org.springframework.boot:spring-boot-autoconfigure"
		provided "org.springframework.boot:spring-boot-starter-tomcat"
		provided "org.grails:grails-web-boot"
		provided "org.grails:grails-dependencies"
		compile 'org.grails.plugins:hibernate'
		compile "org.grails.plugins:cache"
		compile "org.hibernate:hibernate-ehcache"
		testCompile "org.grails:grails-plugin-testing"
		compile "org.springframework.boot:spring-boot-starter-logging"
		compile "org.springframework.boot:spring-boot-starter-actuator"
		compile "org.springframework.boot:spring-boot-autoconfigure"
		compile "org.springframework.boot:spring-boot-starter-tomcat"
		compile "org.grails:grails-dependencies"
		compile "org.grails:grails-web-boot"
		compile "org.grails.plugins:hibernate"
		compile "org.grails.plugins:cache"
		compile "org.hibernate:hibernate-ehcache"
		compile "org.grails.plugins:scaffolding"
		runtime "org.grails.plugins:asset-pipeline"
		testCompile "org.grails:grails-plugin-testing"
		testCompile "org.grails.plugins:geb"
		runtime project(':launcher')
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		compile project ('chorus')
		compile project ('chorus-spring')
		compile project ('chorus-selenium')
		compile project ('chorus-stepregistry')
		provided 'org.springframework.boot:spring-boot-starter-logging'
		provided "org.springframework.boot:spring-boot-starter-actuator"
		provided "org.springframework.boot:spring-boot-autoconfigure"
		provided "org.springframework.boot:spring-boot-starter-tomcat"
		provided "org.grails:grails-web-boot"
		provided "org.grails:grails-dependencies"
		testCompile "org.grails:grails-plugin-testing"
		runtime project(':launcher')
		runtime project(':wrapper')
		compile group: 'org.springframework', name: 'spring-core', version: project.ext.springversion
		compile group: 'org.springframework', name: 'spring-beans', version: project.ext.springversion
		compile group: 'org.springframework', name: 'spring-aop', version: project.ext.springversion
		compile group: 'org.springframework', name: 'spring-context', version: project.ext.springversion
		compile group: 'org.springframework', name: 'spring-web', version: project.ext.springversion
		compile group: 'org.springframework', name: 'spring-webmvc', version: project.ext.springversion
		testCompile name: 'mockwebserver' // http://code.google.com/p/mockwebserver/
		[group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion],
		[group: 'org.apache.commons', name: 'commons-exec', version: commonsExecVersion],
		[group: 'net.socialchange.doctype', name: 'doctype-changer', version: doctypeChangerVersion],
		[group: 'xml-resolver', name: 'xml-resolver', version: xmlResolverVersion],
		[group: 'xerces', name: 'xercesImpl', version: xercesVersion],
		[group: 'saxon', name: 'saxon', version: saxonVersion],
		[group: 'org.codehaus.plexus', name: 'plexus-utils', version: plexusUtilsVersion],
		[group: 'org.apache.xmlgraphics', name: 'fop', version: fopVersion],
		[group: 'org.apache.xmlgraphics', name: 'xmlgraphics-commons', version: xmlGraphicsCommonsVersion],
		[group: 'org.apache.avalon.framework', name: 'avalon-framework-api', version: avalonVersion],
		[group: 'org.apache.avalon.framework', name: 'avalon-framework-impl', version: avalonVersion],
		[group: 'jdom', name: 'jdom', version: jdomVersion],
		[group: 'junit', name: 'junit', version: junitVersion],
		[group: 'org.slf4j', name: 'jcl-over-slf4j', version: slf4jVersion],
		[group: 'org.slf4j', name: 'slf4j-simple', version: slf4jVersion]
		compile group:'org.scala-lang', name:'scala-library', version: scalaVersion
https://github.com/lionleaf/Icarus
compile: compile project(':HoloEverywhere:library')
https://github.com/lionleaf/Icarus
compile: compile project(':HoloEverywhere:contrib:ActionBarSherlock-4.2.0:library')
		runtime project(':launcher')
		runtime project(':launcher')
		testCompile ('org.seleniumhq.selenium:selenium-java:3.4.0') { exclude group: 'junit' }
https://github.com/Hattip/hat.tip
compile: 'org.eclipse.jetty:jetty-client:' + jetty_version,
https://github.com/Hattip/hat.tip
compile: 'org.eclipse.jetty:jetty-websocket:' + jetty_version,
https://github.com/Hattip/hat.tip
compile: 'org.scala-lang:scala-library:' + scalaVersion,
		'com.weiglewilczek.slf4s:slf4s_' + scalaVersion + ':1.0.7',
https://github.com/Hattip/hat.tip
testCompile: 'org.eclipse.jetty.aggregate:jetty-all-server:' + jetty_version,
		compile 'org.springframework.boot:spring-boot-starter-logging'
		compile 'org.springframework.boot:spring-boot-autoconfigure'
		compile 'org.grails:grails-core'
		compile 'org.springframework.boot:spring-boot-starter-actuator'
		compile 'org.springframework.boot:spring-boot-starter-tomcat'
		compile 'org.grails:grails-dependencies'
		testCompile 'org.grails:grails-plugin-testing'
		compile group: hibernateGroup, name: 'hibernate-core', version: hibernateVersion
		compile group: hibernateGroup, name: 'hibernate-entitymanager', version: hibernateVersion
		compile group: hibernateGroup, name: 'hibernate-c3p0', version: hibernateVersion
		compile group: hibernateGroup, name: 'hibernate-ehcache', version: hibernateVersion
		compile group: springGroup, name: 'spring-jdbc', version: springVersion
		compile group: springGroup, name: 'spring-orm', version: springVersion
		compile group: springGroup, name: 'spring-webmvc', version: springVersion
		compile group: springGroup, name: 'spring-test', version: springVersion
		runtime project(':launcher')
		runtime project(':launcher')
		provided 'org.springframework.boot:spring-boot-starter-logging'
		provided "org.springframework.boot:spring-boot-starter-actuator"
		provided "org.springframework.boot:spring-boot-autoconfigure"
		provided "org.springframework.boot:spring-boot-starter-tomcat"
		provided "org.grails:grails-web-boot"
		provided "org.grails:grails-dependencies"
		testCompile "org.grails:grails-plugin-testing"
		provided 'org.grails:grails-dependencies'
		provided 'org.grails:grails-web-boot'
		['commons-codec', 'grails-async', 'grails-core', 'grails-plugin-converters',
		'grails-web', 'groovy'].each { exclude module: it }
		testCompile 'org.grails:grails-plugin-testing'
		runtime project(':launcher')
		compile(group: 'org.springframework.data', name: 'spring-data-redis', version: springDataRedisVersion) {
https://github.com/dfreis/gradle-gwt-plugin
testCompile: testCompile libraries.junit, libraries.jmock, libraries.slf4j_jdk14
		runtime project(':launcher')
		compile "org.springframework.boot:spring-boot-starter-logging"
		compile "org.springframework.boot:spring-boot-autoconfigure"
		compile "org.grails:grails-core"
		compile "org.springframework.boot:spring-boot-starter-actuator"
		compile "org.springframework.boot:spring-boot-starter-tomcat"
		compile "org.grails:grails-dependencies"
		compile "org.grails:grails-web-boot"
		compile "org.grails.plugins:cache"
		compile "org.grails.plugins:scaffolding"
		compile "org.grails.plugins:hibernate5"
		runtime "com.h2database:h2"
		testCompile "org.grails:grails-plugin-testing"
		testCompile "org.grails.plugins:geb"
		runtime project(':wrapper')
		runtime project(":installationBeacon")
apply from: "gradle/testGroupings.gradle"
apply from: 'gradle/buildSplits.gradle'
apply from: "gradle/buildReceipt.gradle"
apply from: "gradle/incomingDistributions.gradle"
apply from: "gradle/versioning.gradle"
apply from: "gradle/dependencies.gradle"
apply from: "gradle/wrapper.gradle"
apply from: "gradle/idea.gradle"
apply from: "gradle/eclipse.gradle"
apply from: "gradle/classycle.gradle"
apply from: "gradle/strictCompile.gradle"
apply from: "gradle/noDependencyResolutionDuringConfiguration.gradle"
apply from: "gradle/testSetup.gradle"
apply from: "gradle/taskOrdering.gradle"
apply from: "gradle/fix-GRADLE-2492.gradle"
apply from: 'gradle/customM2Check.gradle'
apply from: 'gradle/buildTagging.gradle'
apply from: "$rootDir/gradle/groovyProject.gradle"
apply from: "$rootDir/gradle/testWithUnknownOS.gradle"
apply from: "$rootDir/gradle/java9.gradle"
apply from: "$rootDir/gradle/publish.gradle"
apply from: "$rootDir/gradle/codeQuality.gradle"
apply from: "gradle/intTestImage.gradle"
apply from: 'gradle/pullRequestBuild.gradle'
https://github.com/melix/gradle
runtime: runtime patchedExternalModules
		runtime project(':launcher')
		runtime project(':launcher')
		provided 'org.springframework.boot:spring-boot-starter-logging'
		provided "org.springframework.boot:spring-boot-starter-actuator"
		provided "org.springframework.boot:spring-boot-autoconfigure"
		provided "org.springframework.boot:spring-boot-starter-tomcat"
		provided "org.grails:grails-web-boot"
		provided "org.grails:grails-dependencies"
		testCompile "org.grails:grails-plugin-testing"
apply from: "$commonBuildPath/repositories.gradle"
apply from: "$commonBuildPath/plugin-build.gradle"
https://github.com/bmoussaud/dictionary-extensions-plugin
compile: compile deps.deployit_remoting_plugin
apply from: "$commonBuildPath/repositories.gradle"
apply from: "$commonBuildPath/plugin-build.gradle"
https://github.com/bmoussaud/dictionary-extensions-plugin
compile: compile deps.overthere
apply from: "$commonBuildPath/repositories.gradle"
apply from: "$commonBuildPath/plugin-build.gradle"
https://github.com/bmoussaud/dictionary-extensions-plugin
testCompile: testCompile deps.deployit_generic_plugin
apply from: "$commonBuildPath/repositories.gradle"
apply from: "$commonBuildPath/plugin-build.gradle"
https://github.com/bmoussaud/dictionary-extensions-plugin
testCompile: testCompile deps.deployit_file_plugin
apply from: "$commonBuildPath/repositories.gradle"
apply from: "$commonBuildPath/plugin-build.gradle"
https://github.com/bmoussaud/dictionary-extensions-plugin
testCompile: testCompile deps.deployit_udm_test_support
apply from: "$commonBuildPath/repositories.gradle"
apply from: "$commonBuildPath/plugin-build.gradle"
https://github.com/bmoussaud/dictionary-extensions-plugin
testCompile: testCompile deps.easymock
apply from: "$commonBuildPath/repositories.gradle"
apply from: "$commonBuildPath/plugin-build.gradle"
https://github.com/bmoussaud/dictionary-extensions-plugin
testCompile: testCompile deps.itest_support
		testCompile group: 'junit', name: 'junit', version: project.hasProperty('gpars_junitVersion') ? gpars_junitVersion : '4.10'
		testCompile group: 'org.spockframework', name: 'spock-core', version: project.hasProperty('gpars_spockVersion') ? gpars_spockVersion : '0.6-groovy-1.8'
		compile group: 'org.jboss.netty', name: 'netty', version: project.hasProperty('gpars_nettyVersion') ? gpars_nettyVersion : '3.2.7.Final'
		runtime project(':launcher')
		runtime project(':launcher')
		runtime project(':launcher')
		'jersey-core',
		'jersey-server',
		'jersey-servlet'
		'jetty-server',
		'jetty-servlet',
		'jetty-plus'
		providedCompile ("org.eclipse.jetty:$it:8.+") { exclude group: 'org.eclipse.jetty.orbit' }
		testCompile ('com.sun.jersey.jersey-test-framework:jersey-test-framework-core:1.+') { exclude group: 'javax.servlet' }
		runtime project(':launcher')
		compile project(':library')
		compile project(path: ':colorpicker')
		compile project(path: ':framework')
		compile project(path: ':playstore')
		compile group: 'commons-configuration', name: 'commons-configuration', version: project.ext.commonsConfigurationVersion
		compile group: 'commons-beanutils', name: 'commons-beanutils', version: project.ext.commonsBeanutilsVersion
		compile group: 'org.springframework', name: 'spring-context', version: project.ext.springVersion
		compile group: 'org.springframework', name: 'spring-beans', version: project.ext.springVersion
		compile group: 'org.springframework', name: 'spring-web', version: project.ext.springVersion
		compile group: 'org.springframework', name: 'spring-test', version: project.ext.springVersion
		compile group: 'org.apache.wicket', name: 'wicket-core', version: project.ext.wicketVersion
		compile group: 'org.apache.wicket', name: 'wicket-spring', version: project.ext.wicketVersion
		compile group: 'org.apache.wicket', name: 'wicket-datetime', version: project.ext.wicketVersion
		compile group: 'org.apache.wicket', name: 'wicket-auth-roles', version: project.ext.wicketVersion
		compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: project.ext.hibernateVersion
		compile group: 'org.hibernate', name: 'hibernate-c3p0', version: project.ext.hibernateVersion
		compile group: 'org.hsqldb', name: 'hsqldb', version: project.ext.hsqldbVersion
		compile group: 'ch.qos.logback', name: 'logback-classic', version: project.ext.logbackVersion
		compile group: 'commons-lang', name: 'commons-lang', version: project.ext.commonsLangVersion
		testCompile group: 'org.testng', name: 'testng', version: project.ext.testngVersion
		compile group: 'javax.servlet', name: 'servlet-api', version: project.ext.servletVersion
		testCompile "org.spockframework:spock-core:0.6-groovy-1.8", {  exclude group: 'org.codehaus.groovy'  }
https://github.com/twest72/gcouch
compile: compile group: 'de.aonnet', name: 'groovyson', version: 'SNAPSHOT'
		runtime project(':launcher')
apply from: 'gradle/dependencies.gradle'
apply from: 'gradle/idea.gradle'
https://github.com/AlmostIntelligent/Hydra
runtime: runtime libraries.vfs
		compile group: 'org.elasticsearch', name: 'elasticsearch', version: esVersion, transitive: true
https://github.com/nsigustavo/elasticsearch-suggest-plugin
compile: compile "org.apache.lucene:lucene-misc:" + luceneVersion
https://github.com/nsigustavo/elasticsearch-suggest-plugin
compile: compile "org.apache.lucene:lucene-spellchecker:" + luceneVersion
		testCompile group: 'junit', name: 'junit', version: project.hasProperty('gpars_junitVersion') ? gpars_junitVersion : '4.10'
		testCompile group: 'org.spockframework', name: 'spock-core', version: project.hasProperty('gpars_spockVersion') ? gpars_spockVersion : '0.6-groovy-1.8'
		compile group: 'org.jboss.netty', name: 'netty', version: project.hasProperty('gpars_nettyVersion') ? gpars_nettyVersion : '3.2.7.Final'
		':ojdbc5-11.2.0.2.0',
		compile group: 'org.springframework.batch', name: 'spring-batch-core', version: BATCH_VERSION
		compile group: 'org.springframework', name: 'spring-context', version: SPRING_VERSION
		compile group: 'org.springframework', name: 'spring-tx', version: SPRING_VERSION
		compile group: 'org.springframework', name: 'spring-jdbc', version: SPRING_VERSION
		compile group: 'ch.qos.logback', name: 'logback-classic', version: LOGBACK_VERSION
		compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: SLF4J_VERSION
		testCompile group: 'org.spockframework', name: 'spock-core', version: SPOCK_VERSION
		testCompile group: 'org.spockframework', name: 'spock-spring', version: SPOCK_VERSION
		testCompile group: 'org.springframework.batch', name: 'spring-batch-test', version: BATCH_VERSION
		testCompile group: 'org.springframework', name: 'spring-test', version: SPRING_VERSION
		provided 'org.springframework.boot:spring-boot-starter-logging'
		provided "org.springframework.boot:spring-boot-starter-actuator"
		provided "org.springframework.boot:spring-boot-autoconfigure"
		provided "org.springframework.boot:spring-boot-starter-tomcat"
		provided "org.grails:grails-web-boot"
		provided "org.grails.plugins:hibernate5"
		compile "org.grails:grails-logging"
		compile "org.grails:grails-plugin-rest"
		compile "org.grails:grails-plugin-databinding"
		compile "org.grails:grails-plugin-i18n"
		compile "org.grails:grails-plugin-services"
		compile "org.grails:grails-plugin-url-mappings"
		compile "org.grails:grails-plugin-interceptors"
		compile "org.grails.plugins:async"
		compile "org.grails.plugins:gsp"
		runtime "com.h2database:h2"
		runtime "org.apache.tomcat:tomcat-jdbc"
		testCompile "org.grails:grails-gorm-testing-support"
		testCompile "org.grails:grails-plugin-testing"
		testCompile "org.grails.plugins:geb"
		testCompile "org.grails:grails-web-testing-support"
		provided 'org.springframework.boot:spring-boot-starter-logging'
		provided "org.springframework.boot:spring-boot-starter-actuator"
		provided "org.springframework.boot:spring-boot-autoconfigure"
		provided "org.springframework.boot:spring-boot-starter-tomcat"
		provided "org.grails:grails-web-boot"
		provided "org.grails.plugins:hibernate5"
		provided "org.hibernate:hibernate-ehcache"
		provided "org.grails:grails-dependencies"
		runtime "org.grails.plugins:asset-pipeline"
		testCompile "org.grails:grails-plugin-testing"
		provided 'org.springframework.boot:spring-boot-starter-logging'
		provided "org.springframework.boot:spring-boot-starter-actuator"
		provided "org.springframework.boot:spring-boot-autoconfigure"
		provided "org.springframework.boot:spring-boot-starter-tomcat"
		provided "org.grails:grails-web-boot"
		provided "org.grails.plugins:hibernate5"
		compile "org.grails:grails-logging"
		compile "org.grails:grails-plugin-rest"
		compile "org.grails:grails-plugin-databinding"
		compile "org.grails:grails-plugin-i18n"
		compile "org.grails:grails-plugin-services"
		compile "org.grails:grails-plugin-url-mappings"
		compile "org.grails:grails-plugin-interceptors"
		compile "org.grails.plugins:async"
		compile "org.grails.plugins:gsp"
		runtime "com.h2database:h2"
		runtime "org.apache.tomcat:tomcat-jdbc"
		testCompile "org.grails:grails-gorm-testing-support"
		testCompile "org.grails:grails-plugin-testing"
		testCompile "org.grails.plugins:geb"
		testCompile "org.grails:grails-web-testing-support"
https://github.com/schleichardt/Gradle-Project-Boilerplate
compile: compile 'org.scala-lang:scala-library:' + project.ext.scalaVersion
		testCompile 'org.scala-tools.testing:specs_' + project.ext.scalaVersion + ':1.6.9'
		testCompile 'org.scalatest:scalatest_' + project.ext.scalaVersion + ':1.7.1'
apply from: 'dependencies.gradle'
https://github.com/michal-nowak/TaekwondoTeam
compile: compile libraries.slf4j
apply from: 'dependencies.gradle'
https://github.com/michal-nowak/TaekwondoTeam
providedCompile: providedCompile libraries.servletApi
apply from: 'dependencies.gradle'
https://github.com/michal-nowak/TaekwondoTeam
providedCompile: providedCompile libraries.mail
apply from: 'dependencies.gradle'
https://github.com/michal-nowak/TaekwondoTeam
testCompile: testCompile libraries.junit
		'jetty-server',
		'jetty-servlet',
		'jetty-websocket'
		compile ("org.eclipse.jetty:$it:8.+") { exclude group: 'org.eclipse.jetty.orbit' }
		runtime project(':launcher')
		runtime project(':launcher')
		runtime project(':wrapper')
		compile "org.springframework.boot:spring-boot-starter-logging"
		compile "org.springframework.boot:spring-boot-autoconfigure"
		compile "org.grails:grails-core"
		compile "org.springframework.boot:spring-boot-starter-actuator"
		compile "org.springframework.boot:spring-boot-starter-tomcat"
		compile "org.grails:grails-dependencies"
		compile "org.grails:grails-web-boot"
		compile "org.grails.plugins:cache"
		compile "org.grails.plugins:scaffolding"
		provided "org.grails:grails-plugin-services"
		provided "org.grails:grails-plugin-domain-class"
		testCompile "org.grails:grails-plugin-testing"
		testCompile "org.grails.plugins:hibernate4"
https://github.com/feelinglucky/Tracker
compile: compile 'com.android.support:appcompat-v7:+'
		'umeng_sdk.jar', 'locSDK_3.1.jar', 'umeng_social_sdk.jar'])
https://github.com/feelinglucky/Tracker
compile: compile project(':libraries:GraphView')
https://github.com/feelinglucky/Tracker
compile: compile project(':libraries:android-actionbar:actionbar')
https://github.com/RedHatQE/katello-grinder
compile: compile(grinderDep, jythonExclude)
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
apply from: "external-dependencies.gradle"
apply from: "ide-support.gradle"
https://github.com/EqualExperts/json-schema-validator
compile: compile jackson.core, jackson.databind, jackson.jaxrs, jsr311
apply from: "external-dependencies.gradle"
apply from: "ide-support.gradle"
https://github.com/EqualExperts/json-schema-validator
testCompile: testCompile junit, mockito
apply from: "external-dependencies.gradle"
apply from: "ide-support.gradle"
https://github.com/EqualExperts/json-schema-validator
runtime: runtime jersey.core, jersey.server
		compile 'org.springframework.boot:spring-boot-starter-web'
		compile 'org.springframework.boot:spring-boot-starter-security'
		compile 'com.h2database:h2'
		compile "org.apache.tomcat:tomcat-jsp-api"
		compile('org.springframework.boot:spring-boot-starter-data-jpa')
		compile('org.springframework.boot:spring-boot-starter-mail')
		compile('org.springframework.boot:spring-boot-starter-security')
		compile('org.springframework.boot:spring-boot-starter-web')
		runtime('org.springframework.boot:spring-boot-devtools')
		runtime('mysql:mysql-connector-java')
		testCompile('org.springframework.boot:spring-boot-starter-test')
		testCompile('org.springframework.security:spring-security-test')
		compile group: 'org.elasticsearch', name: 'elasticsearch', version: esVersion, transitive: true
https://github.com/codere/elasticsearch-suggest-plugin
compile: compile "org.apache.lucene:lucene-misc:" + luceneVersion
https://github.com/codere/elasticsearch-suggest-plugin
compile: compile "org.apache.lucene:lucene-spellchecker:" + luceneVersion
		testCompile group: 'junit', name: 'junit', version: project.hasProperty('gpars_junitVersion') ? gpars_junitVersion : '4.10'
		testCompile group: 'org.spockframework', name: 'spock-core', version: project.hasProperty('gpars_spockVersion') ? gpars_spockVersion : '0.6-groovy-1.8'
		compile group: 'org.jboss.netty', name: 'netty', version: project.hasProperty('gpars_nettyVersion') ? gpars_nettyVersion : '3.2.7.Final'
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		runtime project(':launcher')
		compile project(':gibson-core')
		compile project(':gibson-appender')
		compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
		testRuntime group: 'org.slf4j', name: 'slf4j-simple', version: slf4jVersion
https://github.com/lambda3-dojos/blackjack-scala-10-04-2012
compile: compile 'org.scala-lang:scala-library:' + scalaVersion
		runtime project(':launcher')
https://github.com/bhoeckendorf/luke-stackwalker
compile: compile 'commons-io:commons-io:+'
https://github.com/bhoeckendorf/luke-stackwalker
compile: compile 'com.miglayout:miglayout-swing:+'
https://github.com/bhoeckendorf/luke-stackwalker
compile: compile 'sc.fiji:bigdataviewer-core:+'
https://github.com/bhoeckendorf/luke-stackwalker
compile: compile 'sc.fiji:SPIM_Registration:+'
https://github.com/bhoeckendorf/luke-stackwalker
compile: compile 'org.janelia.simview:klb:+'
		runtime project(':launcher')
		compile group: 'org.codehaus.sonar', name: 'sonar-plugin-api', version: sonarVersion
		compile group: 'org.codehaus.sonar.plugins', name: 'sonar-surefire-plugin', version: sonarVersion, ext: 'jar'
		compile group: 'org.codehaus.sonar', name: 'sonar-ws-client', version: sonarVersion
https://github.com/excentric/sonar-groovy-plugin
compile: compile configurations.bundled
		testCompile group: 'org.codehaus.sonar', name: 'sonar-testing-harness', version: sonarVersion
https://github.com/twest72/couchnote
compile: compile group: 'de.aonnet', name: 'groovyson', version: 'SNAPSHOT'
https://github.com/twest72/couchnote
compile: compile group: 'de.aonnet', name: 'gcouch', version: 'SNAPSHOT'
		runtime project(':launcher')
		compile group: 'org.springframework.batch', name: 'spring-batch-infrastructure', version: BATCH_VERSION
		compile group: 'org.springframework', name: 'spring-tx', version: SPRING_VERSION
		runtime group: 'org.slf4j', name: 'jcl-over-slf4j', version: SLF4J_VERSION
		compile group: 'org.slf4j', name: 'slf4j-api', version: SLF4J_VERSION
		testCompile group: 'org.spockframework', name: 'spock-core', version: SPOCK_VERSION
		testCompile group: 'org.spockframework', name: 'spock-spring', version: SPOCK_VERSION
		testCompile group: 'org.springframework', name: 'spring-test', version: SPRING_VERSION
https://github.com/alexrom/gradle-gwt-plugin
testCompile: testCompile libraries.junit, libraries.jmock, libraries.slf4j_jdk14
		compile group: 'org.springframework', name: 'spring-context', version: springVersion
		testCompile group: 'junit', name: 'junit', version: 4.10
		testCompile group: 'org.springframework', name: 'spring-test', version: springVersion
		provided 'org.springframework.boot:spring-boot-starter-logging'
		provided "org.springframework.boot:spring-boot-starter-actuator"
		provided "org.springframework.boot:spring-boot-autoconfigure"
		provided "org.springframework.boot:spring-boot-starter-tomcat"
		provided "org.grails:grails-web-boot"
		provided "org.grails:grails-dependencies"
		testCompile "org.grails:grails-plugin-testing"
https://github.com/jonasabreu/contas-refeitas
compile: compile 'org.scala-lang:scala-library:' + scalaVersion
https://github.com/kimble/dropwizard-dashboard
compile: compile 'io.vertx:vertx-core:' + vertxVersion
https://github.com/kimble/dropwizard-dashboard
compile: compile 'io.vertx:vertx-codegen:' + vertxVersion
https://github.com/kimble/dropwizard-dashboard
compile: compile 'io.vertx:vertx-web:' + vertxVersion
		provided "org.grails:grails-plugin-services"
		provided "org.grails:grails-plugin-domain-class"
		provided 'org.springframework.boot:spring-boot-starter-logging'
		provided "org.springframework.boot:spring-boot-starter-actuator"
		provided "org.springframework.boot:spring-boot-autoconfigure"
		provided "org.springframework.boot:spring-boot-starter-tomcat"
		provided "org.grails:grails-dependencies"
		provided "org.grails:grails-web-boot"
		provided 'org.grails.plugins:hibernate'
		provided "org.grails.plugins:cache"
		provided "org.hibernate:hibernate-ehcache"
		testCompile "org.grails:grails-plugin-testing"
		testCompile "org.grails.plugins:geb"
		compile group: 'org.hornetq', name: 'hornetq-core', version: hornetqVersion
		compile group: 'org.hornetq', name: 'hornetq-core-client', version: hornetqVersion
		compile group: 'org.hornetq', name: 'hornetq-jms-client', version: hornetqVersion
		compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
		runtime group: 'org.slf4j', name: 'slf4j-simple', version: slf4jVersion
		compile ':vert.x-core'
		runtime ':netty'
		compile project(":gibson-core")
		compile project(":gibson-appender")
		compile "org.springframework.boot:spring-boot-starter-logging"
		compile "org.springframework.boot:spring-boot-autoconfigure"
		compile "org.grails:grails-core"
		compile "org.springframework.boot:spring-boot-starter-actuator"
		compile "org.springframework.boot:spring-boot-starter-tomcat"
		compile "org.grails:grails-dependencies"
		compile "org.grails:grails-web-boot"
		compile "org.grails.plugins:cache"
		provided "org.grails:grails-plugin-services"
		provided "org.grails:grails-plugin-domain-class"
		'jetty-server',
		'jetty-servlet',
		'jetty-websocket'
		compile ("org.eclipse.jetty:$it:8.+") { exclude group: 'org.eclipse.jetty.orbit' }
		compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
		testRuntime group: 'org.slf4j', name: 'slf4j-simple', version: slf4jVersion
		provided 'org.springframework.boot:spring-boot-starter-logging'
		provided "org.springframework.boot:spring-boot-starter-actuator"
		provided "org.springframework.boot:spring-boot-autoconfigure"
		provided "org.springframework.boot:spring-boot-starter-tomcat"
		provided "org.grails:grails-web-boot"
		provided "org.grails:grails-dependencies"
		testCompile "org.grails:grails-plugin-testing"
		compile group: 'com.google.appengine', name: 'appengine-api-1.0-sdk', version: appEngineVersion
		compile group: 'com.google.appengine', name: 'appengine-api-labs', version: appEngineVersion
		testCompile group: 'com.google.appengine', name: 'appengine-api-stubs', version: appEngineVersion
		testCompile group: 'com.google.appengine', name: 'appengine-testing', version: appEngineVersion
		compile project ('chorus')
		compile project ('chorus-spring')
		compile project ('chorus-selenium')
		compile project ('chorus-stepregistry')
https://github.com/Julivandamaceno/contas-refeitas
compile: compile 'org.scala-lang:scala-library:' + scalaVersion
		compile ':fongo'
		compile ':mongo'
		compile ':vert.x-core'
		compile ':vert.x-platform'
		testRuntime ':netty'
		testRuntime ':jackson-core'
		testRuntime ':jackson-mapper'
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		compile project(':rosjava_geometry')
		compile project(':rosjava')
apply from: "external-dependencies.gradle"
apply from: "ide-support.gradle"
apply from: "cobertura-support.gradle"
https://github.com/chrisgittings/json-schema-validator
compile: compile jackson.xc, jackson.core, jackson.mapper, jackson.jaxrs, jsr311
apply from: "external-dependencies.gradle"
apply from: "ide-support.gradle"
apply from: "cobertura-support.gradle"
https://github.com/chrisgittings/json-schema-validator
testCompile: testCompile junit, mockito
apply from: "external-dependencies.gradle"
apply from: "ide-support.gradle"
apply from: "cobertura-support.gradle"
https://github.com/chrisgittings/json-schema-validator
runtime: runtime jersey.core, jersey.server
apply from: rootProject.file("gradle/${database}.gradle")
apply from: 'gradle/publish.gradle'
https://github.com/jprante/elasticsearch-jdbc
compile: compile 'org.elasticsearch:elasticsearch:' + versions.elasticsearch
		compile 'org.xbib.elasticsearch.plugin:elasticsearch-helper:' + versions.'elasticsearch-helper'
apply from: rootProject.file("gradle/${database}.gradle")
apply from: 'gradle/publish.gradle'
https://github.com/jprante/elasticsearch-jdbc
compile: compile 'org.apache.logging.log4j:log4j-slf4j-impl:' + versions.log4j
apply from: rootProject.file("gradle/${database}.gradle")
apply from: 'gradle/publish.gradle'
https://github.com/jprante/elasticsearch-jdbc
compile: compile 'org.apache.logging.log4j:log4j-core:'+ versions.log4j
apply from: rootProject.file("gradle/${database}.gradle")
apply from: 'gradle/publish.gradle'
https://github.com/jprante/elasticsearch-jdbc
compile: compile('com.vividsolutions:jts:' + versions.jts) {
apply from: rootProject.file("gradle/${database}.gradle")
apply from: 'gradle/publish.gradle'
https://github.com/jprante/elasticsearch-jdbc
testCompile: testCompile 'org.testng:testng:' + versions.testng
apply from: rootProject.file("gradle/${database}.gradle")
apply from: 'gradle/publish.gradle'
https://github.com/jprante/elasticsearch-jdbc
testCompile: testCompile 'net.java.dev.jna:jna:' + versions.jna
apply from: rootProject.file("gradle/${database}.gradle")
apply from: 'gradle/publish.gradle'
https://github.com/jprante/elasticsearch-jdbc
testCompile: testCompile 'org.apache.logging.log4j:log4j-slf4j-impl:' + versions.log4j
apply from: rootProject.file("gradle/${database}.gradle")
apply from: 'gradle/publish.gradle'
https://github.com/jprante/elasticsearch-jdbc
testCompile: testCompile 'org.apache.logging.log4j:log4j-core:'+ versions.log4j
https://github.com/wselwood/TeaTimer
compile: compile     'org.scala-lang:scala-library:' + project.scalaVersion
		compile( 'cascading:cascading-core:2.0.1' ) { exclude group: 'log4j' }
		compile ':vert.x-core'
		compile ':vert.x-platform'
		runtime ':netty'
		runtime ':jackson-core'
		runtime ':jackson-mapper'
		runtime ':hazelcast'
		runtime ':js'
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
apply from: './libraries.gradle'
https://github.com/tlrasor/conditions
compile: compile(libraries.commonslang3)
apply from: './libraries.gradle'
https://github.com/tlrasor/conditions
compile: compile(libraries.groovy)
apply from: './libraries.gradle'
https://github.com/tlrasor/conditions
compile: compile(libraries.slf4j)
apply from: './libraries.gradle'
https://github.com/tlrasor/conditions
testCompile: testCompile(libraries.junit)
apply from: './libraries.gradle'
https://github.com/tlrasor/conditions
testCompile: testCompile(libraries.logback)
		runtime project(':launcher')
apply from: "idea/idea.gradle"
https://github.com/ldaley/gradle-html-presentations
runtime: runtime subprojects.collect { owner.project(it.path) }
		compile name:'Agent'
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		[group: 'ch.qos.logback', name: 'logback-classic', version: props.logbackVersion],
		[group: 'org.slf4j', name: 'slf4j-api', version: props.slf4jVersion]
		runtime project(':launcher')
https://github.com/uarun/akka-examples
compile: compile libraries.akka_actor
apply from: "external-dependencies.gradle"
apply from: "ide-support.gradle"
apply from: "cobertura-support.gradle"
https://github.com/bap2000/json-schema-validator
compile: compile jackson.xc, jackson.core, jackson.mapper, jackson.jaxrs, jsr311
apply from: "external-dependencies.gradle"
apply from: "ide-support.gradle"
apply from: "cobertura-support.gradle"
https://github.com/bap2000/json-schema-validator
testCompile: testCompile junit, mockito
apply from: "external-dependencies.gradle"
apply from: "ide-support.gradle"
apply from: "cobertura-support.gradle"
https://github.com/bap2000/json-schema-validator
runtime: runtime jersey.core, jersey.server
		compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
		runtime group: 'org.slf4j', name: 'slf4j-simple', version: slf4jVersion
		compile group: 'org.springframework', name: 'spring-context', version: SPRING_VERSION
		compile group: 'org.springframework', name: 'spring-core', version: SPRING_VERSION
		compile group: 'org.springframework', name: 'spring-beans', version: SPRING_VERSION
		compile group: 'org.springframework', name: 'spring-asm', version: SPRING_VERSION
		compile group: 'org.springframework', name: 'spring-expression', version: SPRING_VERSION
		compile group: 'org.springframework.integration', name: 'spring-integration-core', version: SPRING_INTEGRATION_VERSION
		testCompile group: 'org.springframework', name: 'spring-test', version: SPRING_VERSION
apply from: "$rootDir/maven.gradle"
https://github.com/jeffkole/spring-hadoop
compile: compile hadoop
https://github.com/puniverse/galaxy
compile: compile "co.parallelunivese:high-scale-lib:" // non-Maven
https://github.com/gooooloo/timeAccumulater
compile: compile project(':Downloads:SlidingMenu-master:library')
		compile group: 'org.slf4j', name: 'slf4j-api', version: slf4j_version
		testCompile group: 'junit', name: 'junit', version: junit_version
		compile group: 'winglongitude', name: 'liger-data-access', version: ligerVersion
		compile group: 'net.canadensys', name: 'canadensys-web-core', version: webCoreVersion
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
https://github.com/jonasabreu/leis
compile: compile 'org.scala-lang:scala-library:' + scalaVersion
https://github.com/Asuka4J/nitrous
compile: compile spring, myjar, junit, jersey, jersey_test, httpclient, gson, log4j, slf4j      //, cat
https://github.com/Asuka4J/nitrous
testCompile: testCompile spring, myjar, junit, jersey, jersey_test, httpclient, gson, log4j, slf4j  //, cat
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		compile group: 'com.google.appengine', name: 'appengine-api-1.0-sdk', version: ext.appengineVersion
		compile group: 'com.google.appengine', name: 'appengine-api-labs', version: ext.appengineVersion
		testCompile group: 'com.google.appengine', name: 'appengine-testing', version: ext.appengineVersion
		testCompile group: 'com.google.appengine', name: 'appengine-api-stubs', version: ext.appengineVersion
		runtime group: 'com.google.appengine', name: 'appengine-tools-sdk', version: ext.appengineVersion
https://github.com/slspeek/gradle-gwt-plugin
testCompile: testCompile ext.libraries.junit, ext.libraries.jmock, ext.libraries.slf4j_jdk14
		runtime project(':launcher')
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
https://github.com/NikosPardalis/CST_Connect
compile: compile project(':D::Dropbox:workspace:CalendarView')
https://github.com/NikosPardalis/CST_Connect
compile: compile project(':D::Dropbox:workspace:android-mapviewballoons')
https://github.com/NikosPardalis/CST_Connect
compile: compile project(':D::Dropbox:workspace:aFileChooser')
https://github.com/NikosPardalis/CST_Connect
compile: compile project(':D::Dropbox:workspace:PullToRefresh 2.1.0')
https://github.com/NikosPardalis/CST_Connect
compile: compile project(':D::Dropbox:workspace:ViewPagerIndicator 2.4.1')
https://github.com/NikosPardalis/CST_Connect
compile: compile project(':D::Dropbox:workspace:ActionBarSherlock 4.3.1')
https://github.com/NikosPardalis/CST_Connect
compile: compile project(':D::Dropbox:workspace:SlidingMenu')
https://github.com/NikosPardalis/CST_Connect
compile: compile project(':D::Dropbox:workspace:Refresh Action Item')
		runtime project(':launcher')
		[group: 'org.springframework',name:'org.springframework.orm',version:spring_version],
		[group: 'org.springframework',name:'org.springframework.oxm',version:spring_version],
		[group: 'org.springframework',name:'org.springframework.web.servlet',version:spring_version],
		[group: 'org.springframework',name:'org.springframework.aspects',version:spring_version],
		[group: 'org.slf4j',name:'com.springsource.slf4j.api',version:slf4j_version],
		[group: 'org.slf4j',name:'com.springsource.slf4j.org.apache.commons.logging',version:slf4j_version],
		[group: 'org.slf4j',name:'com.springsource.slf4j.log4j',version:slf4j_version],
		[group: 'org.springframework',name:'org.springframework.test',version:spring_version],
https://github.com/PierrickPuimeanChieze/New-Dawn
compile: compile "org.springframework:spring-core:" + springVersion
https://github.com/PierrickPuimeanChieze/New-Dawn
compile: compile "org.springframework:spring-context:" + springVersion
https://github.com/PierrickPuimeanChieze/New-Dawn
compile: compile "org.springframework:spring-beans:" + springVersion
https://github.com/PierrickPuimeanChieze/New-Dawn
compile: compile 'ch.qos.logback:logback-core:' + logbackVersion
https://github.com/PierrickPuimeanChieze/New-Dawn
compile: compile 'ch.qos.logback:logback-classic:' + logbackVersion
		runtime project(':wrapper')
		runtime project(":installationBeacon")
apply from: "gradle/testGroupings.gradle"
apply from: 'gradle/buildSplits.gradle'
apply from: "gradle/buildScanUserData.gradle"
apply from: "gradle/taskCacheBuildScanUserData.gradle"
apply from: "gradle/incomingDistributions.gradle"
apply from: "gradle/versioning.gradle"
apply from: "gradle/dependencies.gradle"
apply from: "gradle/wrapper.gradle"
apply from: "gradle/idea.gradle"
apply from: "gradle/eclipse.gradle"
apply from: "gradle/classycle.gradle"
apply from: "gradle/strictCompile.gradle"
apply from: "gradle/noDependencyResolutionDuringConfiguration.gradle"
apply from: "gradle/testSetup.gradle"
apply from: "gradle/taskOrdering.gradle"
apply from: "gradle/fix-GRADLE-2492.gradle"
apply from: 'gradle/customM2Check.gradle'
apply from: "$rootDir/gradle/groovyProject.gradle"
apply from: "$rootDir/gradle/testWithUnknownOS.gradle"
apply from: "$rootDir/gradle/java9.gradle"
apply from: "$rootDir/gradle/publish.gradle"
apply from: "$rootDir/gradle/codeQuality.gradle"
apply from: "gradle/intTestImage.gradle"
apply from: 'gradle/pullRequestBuild.gradle'
https://github.com/lguzzon/gradle
runtime: runtime patchedExternalModules
		compile group: 'org.springframework', name: 'spring-webmvc', version: springVersion
		compile group: 'org.springframework', name: 'spring-web', version: springVersion
		compile group: 'org.springframework', name: 'spring-context-support', version: springVersion
		compile group: 'org.postgresql', name: 'postgresql', version: postgresqlVersion
		compile group: 'org.hibernate', name: 'hibernate-c3p0', version: hibernateVersion
		compile group: 'org.freemarker', name: 'freemarker', version: freemarkerVersion
		compile group: 'commons-codec', name: 'commons-codec', version: apacheCodecVersion
		compile group: 'org.ocpsoft.rewrite', name: 'rewrite-servlet', version: rewriteVersion
		compile group: 'net.sf.ehcache', name: 'ehcache-core', version: ehCacheVersion
		compile group: 'org.sitemesh', name: 'sitemesh', version: sitemeshVersion
		compile group: 'org.yaml', name: 'snakeyaml', version: snakeYamlVersion
		compile group: 'org.liquibase', name: 'liquibase-core', version: liquibaseVersion
		compile group: 'com.h2database', name: 'h2', version: h2Version
		testCompile group: 'org.springframework', name: 'spring-test', version: springVersion
		testCompile group: 'org.seleniumhq.selenium', name :'selenium-java',version:seleniumVersion
		testCompile group: 'org.seleniumhq.selenium', name :'selenium-firefox-driver',version:seleniumVersion
		testCompile group: 'org.seleniumhq.selenium', name :'selenium-htmlunit-driver',version:seleniumVersion
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
https://github.com/samueltbrown/gradle-cucumber-plugin
provided: provided 'info.cukes:cucumber-core:' + CUCUMBER_VERSION
https://github.com/samueltbrown/gradle-cucumber-plugin
testCompile: testCompile 'info.cukes:cucumber-junit:' + CUCUMBER_VERSION
https://github.com/samueltbrown/gradle-cucumber-plugin
testCompile: testCompile 'info.cukes:cucumber-java:' + CUCUMBER_VERSION
		compile project(":cgh-definitions-domain")
		['core', 'hibernate', 'plugin-datasource', 'plugin-domain-class'].each { plugin ->
https://github.com/gshakhn/idea-fitnesse
compile: compile configurations.bundle
https://github.com/gshakhn/idea-fitnesse
testCompile: testCompile configurations.ideaSdk
https://github.com/uniba-dsg/betsy
compile: compile configurations.internal
https://github.com/uniba-dsg/betsy
compile: compile configurations.external
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		provided 'org.springframework.boot:spring-boot-starter-logging'
		provided "org.springframework.boot:spring-boot-starter-actuator"
		provided "org.springframework.boot:spring-boot-autoconfigure"
		provided "org.springframework.boot:spring-boot-starter-tomcat"
		provided "org.grails:grails-web-boot"
		provided "org.grails:grails-dependencies"
		compile "org.grails:grails-core"
		compile "org.grails.plugins:hibernate5"
		compile "org.grails.plugins:cache"
		compile "org.hibernate:hibernate-ehcache"
		testCompile "org.grails:grails-plugin-testing"
		provided "org.grails:grails-plugin-services"
		provided "org.grails:grails-plugin-domain-class"
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		compile name: 'OtpErlang'
		compile project('jps-plugin')
		compile project(':ical_reader')
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
https://github.com/qii/weiciyuan
compile: compile(project(':libs:slidingmenulibrary')) {
https://github.com/qii/weiciyuan
compile: compile(project(':libs:showcaseviewlibrary')) {
https://github.com/irccloud/android
compile: compile 'com.google.android.apps.dashclock:dashclock-api:+'
https://github.com/irccloud/android
compile: compile 'com.vandalsoftware.android:dslv:+'
		compile project(':android-websockets')
https://github.com/twest72/couchdb-elasticsearch
compile: compile group: 'de.aonnet', name: 'gcouch', version: 'SNAPSHOT'
https://github.com/kaleeswaran14/Jenkins-api-tour
compile: compile spec.libraries.ivy
https://github.com/kaleeswaran14/Jenkins-api-tour
compile: compile spec.libraries.httpBuilder
		compile spec.libraries["${flavor}Cli".toString()]
https://github.com/kaleeswaran14/Jenkins-api-tour
testCompile: testCompile spec.libraries.spock
https://github.com/kaleeswaran14/Jenkins-api-tour
testCompile: testCompile spec.libraries.junit
		compile group: 'org.jboss.netty', name: 'netty', version: project.hasProperty('gpars_nettyVersion') ? gpars_nettyVersion : '3.2.9.Final'
		testCompile group: 'junit', name: 'junit', version: project.hasProperty('gpars_junitVersion') ? gpars_junitVersion : '4.11'
		testCompile group: 'org.spockframework', name: 'spock-core', version: project.hasProperty('gpars_spockVersion') ? gpars_spockVersion : '0.7-groovy-2.0'
https://github.com/RyanDur/GradlePresentation
testCompile: testCompile group:'info.cukes', name:'cucumber-core', version:'+'
https://github.com/RyanDur/GradlePresentation
testCompile: testCompile group:'info.cukes', name:'cucumber-java', version:'+'
https://github.com/RyanDur/GradlePresentation
testCompile: testCompile group:'info.cukes', name:'cucumber-junit', version:'+'
		runtime project(':launcher')
		compile group:'com.fasterxml.jackson.core', name:'jackson-core', version:project.ext.jacksonVersion
		compile group:'com.fasterxml.jackson.core', name:'jackson-annotations', version:project.ext.jacksonVersion
		compile group:'com.fasterxml.jackson.core', name:'jackson-databind', version:project.ext.jacksonVersion
		compile group:'com.fasterxml.jackson.datatype', name:'jackson-datatype-joda', version:project.ext.jacksonVersion
		compile group:'com.squareup.okhttp', name:'okhttp', version:project.ext.okHttpVersion
		compile group:'com.squareup.okhttp', name:'okhttp-urlconnection', version:project.ext.okHttpVersion
		compile group:'com.squareup.retrofit', name:'retrofit', version:project.ext.retrofitVersion
		compile group:'com.squareup.retrofit', name:'converter-jackson', version:project.ext.retrofitVersion
		['core', 'hibernate', 'plugin-datasource', 'plugin-domain-class'].each { plugin ->
		compile project(":marid")
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		compile(name:'android-lib-release', ext:'aar')
		compile 'net.slimevoid:SlimevoidLibrary:' + slimevoidVersion + ':dev'
		runtime project(':launcher')
		runtime project(':launcher')
		provided 'org.grails:grails-dependencies'
		provided 'org.grails:grails-web-boot'
		testCompile 'org.grails:grails-plugin-testing'
		testCompile group: 'junit', name: 'junit', version: junitVersion
		compile group: 'javax.ws.rs', name: 'jsr311-api', version: jaxRsVersion
		compile group: 'com.sun.jersey', name: 'jersey-client', version: jerseyVersion
		compile group: 'com.sun.jersey', name: 'jersey-server', version: jerseyVersion
		compile group: 'com.sun.jersey', name: 'jersey-servlet', version: jerseyVersion
		compile group: 'com.sun.jersey', name: 'jersey-core', version: jerseyVersion
		compile group: 'com.sun.jersey.contribs', name: 'jersey-spring', version: jerseyVersion
		compile group: 'org.springframework', name: 'spring-core', version: springVersion
		compile group: 'org.springframework', name: 'spring-web', version: springVersion
		compile group: 'org.springframework', name: 'spring-context', version: springVersion
		runtime group: 'org.apache.shiro', name: 'shiro-core', version: shiroVersion
		runtime group: 'org.apache.shiro', name: 'shiro-web', version: shiroVersion
		runtime group: 'org.apache.shiro', name: 'shiro-cas', version: shiroVersion
		compile group: 'commons-codec', name: 'commons-codec', version: commonsCodecVersion
		compile group: 'org.slf4j', name: 'slf4j-log4j12', version: slf4jVersion
		compile 'net.slimevoid:SlimevoidLibrary:' + slimevoidVersion + ':dev'
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		runtime project(':launcher')
https://github.com/eldenbishop/trident-mongodb
compile: compile ext.lib.mongodb
https://github.com/eldenbishop/trident-mongodb
compile: compile ext.lib.storm
https://github.com/eldenbishop/trident-mongodb
compile: compile ext.lib.guava
https://github.com/eldenbishop/trident-mongodb
compile: compile ext.lib.jackson
		compile project(':../lychee')
https://github.com/skhatri/easy-search-jpa
compile: compile configurations.spring
		'lib/FXExperienceControls.jar',
		'lib/JavaFxDialog.jar',
		'lib/jfxrt.jar')
		compile name: 'options'
		compile name: 'mpj'
		compile name: 'colt'
		compile name: 'Jama-1.0.3'
		compile name: 'VARNAv3-8-API'
		compile name: 'commons-math-3.0-SNAPSHOT'
		compile name: 'touch-image-view'
		compile project(':owncloud-android-library')
		'lib/arena-client-7.1.2.jar',
		'lib/arena-shared-7.5.5.jar',
		'lib/compeng-common-1.2.3.jar',
		'lib/custom-serialization-1.1.1.jar'
		runtime project(':launcher')
		runtime project(':launcher')
		runtime project(':launcher')
		runtime project(':wrapper')
https://github.com/jeffgnpc/gwt-gradle-plugin
compile: compile libraries.slf4j_api, libraries.ant
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
https://github.com/sazzer/yui3-builder-gradle-plugin
compile: compile "com.yahoo.platform.yui:yuicompressor:+"
https://github.com/sazzer/yui3-builder-gradle-plugin
testCompile: testCompile "junit:junit:+"
https://github.com/sazzer/yui3-builder-gradle-plugin
testCompile: testCompile "org.easymock:easymock:+"
		provided 'org.springframework.boot:spring-boot-starter-logging'
		provided "org.springframework.boot:spring-boot-starter-actuator"
		provided "org.springframework.boot:spring-boot-autoconfigure"
		provided "org.springframework.boot:spring-boot-starter-tomcat"
		provided "org.grails:grails-web-boot"
		provided "org.grails:grails-dependencies"
		testCompile "org.grails:grails-plugin-testing"
		runtime project(':launcher')
https://github.com/dirkriehle/wahlzeit
compile: compile 'com.google.appengine:appengine:+'
https://github.com/dirkriehle/wahlzeit
compile: compile 'com.google.appengine:appengine-api-1.0-sdk:+'
https://github.com/dirkriehle/wahlzeit
compile: compile 'com.google.appengine.tools:appengine-gcs-client:+'
https://github.com/dirkriehle/wahlzeit
testCompile: testCompile 'com.google.appengine:appengine-testing:+'
https://github.com/dirkriehle/wahlzeit
testCompile: testCompile 'com.google.appengine:appengine-api-stubs:+'
https://github.com/dirkriehle/wahlzeit
testCompile: testCompile 'com.google.appengine:appengine-api-labs:+'
https://github.com/dirkriehle/wahlzeit
testCompile: testCompile 'com.google.appengine:appengine-tools-sdk:+'
		runtime project(':launcher')
		compile( group: 'cascading', name: 'cascading-core', version: cascadingVersion )
		compile( group: 'cascading', name: 'cascading-hadoop', version: cascadingVersion )
		compile( 'cascading:cascading-core:2.0.1' ) { exclude group: 'log4j' }
		provided 'org.springframework.boot:spring-boot-starter-logging'
		provided "org.springframework.boot:spring-boot-starter-actuator"
		provided "org.springframework.boot:spring-boot-autoconfigure"
		provided "org.springframework.boot:spring-boot-starter-tomcat"
		provided "org.grails:grails-web-boot"
		provided "org.grails:grails-dependencies"
		testCompile "org.grails:grails-plugin-testing"
https://github.com/RyanDur/Patu
compile: compile 'commons-io:commons-io:+'
		compile name: "swt64"
		compile project(':google-play-services_lib')
		runtime project(':launcher')
		compile group: "org.apache.wicket", name: "wicket-core", version: libz.wicket, changing: true
		compile group: "org.apache.wicket", name: "wicket-devutils", version: libz.wicket, changing: true
https://github.com/pugang/wicket-stateless
compile: compile	'org.apache.wicket:wicket-core:'+libz.wicket,
https://github.com/pugang/wicket-stateless
compile: 'org.apache.wicket:wicket-devutils:'+libz.wicket
https://github.com/pugang/wicket-stateless
compile: compile "org.eclipse.jetty:jetty-webapp:"+libz.jetty
https://github.com/pugang/wicket-stateless
compile: compile	'ch.qos.logback:logback-classic:'+libz.logback,
https://github.com/pugang/wicket-stateless
compile: 'org.slf4j:log4j-over-slf4j:'+libz.log4j
https://github.com/pugang/wicket-stateless
compile: compile 'com.sun.jersey:jersey-core:'+libz.jersey,
https://github.com/pugang/wicket-stateless
compile: 'com.sun.jersey:jersey-client:'+libz.jersey,
https://github.com/pugang/wicket-stateless
compile: 'com.sun.jersey:jersey-json:'+libz.jersey
https://github.com/pugang/wicket-stateless
testCompile: testCompile 'junit:junit:'+libz.junit
		runtime project(':launcher')
		compile 'org.springframework.boot:spring-boot-starter-data-jpa'
		compile 'org.springframework.boot:spring-boot-starter-web'
		runtime 'mysql:mysql-connector-java'
		compile 'org.flywaydb:flyway-core'
		compile 'com.fasterxml.jackson.core:jackson-databind'
		testCompile 'com.h2database:h2'
		testCompile 'org.spockframework:spock-core'
		testCompile 'org.codehaus.groovy:groovy-all'
		testCompile 'org.springframework.boot:spring-boot-starter-test'
		runtime project(':launcher')
		runtime project(':launcher')
		runtime project(':wrapper')
		runtime project(":installationBeacon")
apply from: "gradle/testGroupings.gradle"
apply from: 'gradle/buildSplits.gradle'
apply from: 'gradle/buildScanUserData.gradle'
apply from: "gradle/incomingDistributions.gradle"
apply from: "gradle/versioning.gradle"
apply from: "gradle/dependencies.gradle"
apply from: "gradle/wrapper.gradle"
apply from: "gradle/idea.gradle"
apply from: "gradle/eclipse.gradle"
apply from: "gradle/classycle.gradle"
apply from: "gradle/strictCompile.gradle"
apply from: "gradle/noDependencyResolutionDuringConfiguration.gradle"
apply from: "gradle/testSetup.gradle"
apply from: "gradle/taskOrdering.gradle"
apply from: "gradle/fix-GRADLE-2492.gradle"
apply from: 'gradle/customM2Check.gradle'
apply from: "$rootDir/gradle/groovyProject.gradle"
apply from: "$rootDir/gradle/testWithUnknownOS.gradle"
apply from: "$rootDir/gradle/java9.gradle"
apply from: "$rootDir/gradle/publish.gradle"
apply from: "$rootDir/gradle/codeQuality.gradle"
apply from: "gradle/intTestImage.gradle"
apply from: 'gradle/pullRequestBuild.gradle'
https://github.com/seanjreilly/gradle
runtime: runtime patchedExternalModules
		provided 'org.springframework.boot:spring-boot-starter-logging'
		provided "org.springframework.boot:spring-boot-starter-actuator"
		provided "org.springframework.boot:spring-boot-autoconfigure"
		provided "org.springframework.boot:spring-boot-starter-tomcat"
		provided "org.grails:grails-web-boot"
		provided "org.grails:grails-dependencies"
		testCompile "org.grails:grails-plugin-testing"
		runtime project(':launcher')
		runtime project(':wrapper')
		compile project(':androidPullToRefresh')
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		compile group: 'org.neo4j', name: 'neo4j-kernel', version: neo4jVersion
		compile group: 'org.neo4j', name: 'neo4j-lucene-index', version: neo4jVersion
		compile group: 'org.neo4j', name: 'server-api', version: neo4jVersion
		testCompile group: 'org.neo4j', name: 'neo4j-kernel', version: neo4jVersion, classifier: 'tests'
		testCompile group: 'org.neo4j.app', name: 'neo4j-server', version: neo4jVersion, classifier: 'tests'
		testCompile group: 'org.neo4j.app', name: 'neo4j-server', version: neo4jVersion
		testCompile group: 'com.sun.jersey', name: 'jersey-core', version: jerseyVersion
		testCompile group: 'com.sun.jersey', name: 'jersey-client', version: jerseyVersion
		compile 'org.springframework.boot:spring-boot-devtools'
		testCompile 'com.jayway.jsonpath:json-path'
		testCompile 'com.jayway.jsonpath:json-path-assert'
		testCompile 'junit:junit'
		testCompile 'org.springframework:spring-test'
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
https://github.com/luklanis/csipsimple-plugin
compile: compile project(':thirdparty:locale-api')
		compile project(":AppConfigClient")
		runtime project(':launcher')
		runtime project(':launcher')
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		runtime project(':launcher')
		runtime project(':launcher')
		compile group: "com.google.gwt", name: "gwt-user", version: gwt_version
https://github.com/rworsnop/H3T_example
compile: compile group: 'h3t', name: 'h3t', version: '+'
		runtime project(':launcher')
		runtime project(':wrapper')
		runtime project(":installationBeacon")
apply from: "gradle/testGroupings.gradle"
apply from: 'gradle/buildSplits.gradle'
apply from: "gradle/buildScanUserData.gradle"
apply from: "gradle/taskCacheBuildScanUserData.gradle"
apply from: "gradle/incomingDistributions.gradle"
apply from: "gradle/versioning.gradle"
apply from: "gradle/dependencies.gradle"
apply from: "gradle/wrapper.gradle"
apply from: "gradle/idea.gradle"
apply from: "gradle/eclipse.gradle"
apply from: "gradle/classycle.gradle"
apply from: "gradle/strictCompile.gradle"
apply from: "gradle/noDependencyResolutionDuringConfiguration.gradle"
apply from: "gradle/testSetup.gradle"
apply from: "gradle/fix-GRADLE-2492.gradle"
apply from: 'gradle/customM2Check.gradle'
apply from: "$rootDir/gradle/groovyProject.gradle"
apply from: "$rootDir/gradle/testWithUnknownOS.gradle"
apply from: "$rootDir/gradle/java9.gradle"
apply from: "$rootDir/gradle/publish.gradle"
apply from: "$rootDir/gradle/codeQuality.gradle"
apply from: "gradle/intTestImage.gradle"
apply from: 'gradle/pullRequestBuild.gradle'
https://github.com/huxi/gradle
runtime: runtime patchedExternalModules
		runtime project(':launcher')
		runtime project(':wrapper')
		compile project(':services')
		compile project(':web-client')
		runtime project(':launcher')
		compile group: 'org.springframework', name: 'spring-beans', version: springVersion, force: true
		compile group: 'org.springframework', name: 'spring-context', version: springVersion, force: true
		compile group: 'org.springframework', name: 'spring-core', version: springVersion, force: true
		compile group: 'org.springframework', name: 'spring-webmvc', version: springVersion, force: true
		testCompile group: 'org.springframework', name: 'spring-test', version: springVersion
https://github.com/gini/dropwizard-gradle
compile: 'com.yammer.dropwizard:dropwizard-core:' + dropwizardVersion,
https://github.com/gini/dropwizard-gradle
compile: 'com.yammer.dropwizard:dropwizard-hibernate:' + dropwizardVersion,
https://github.com/gini/dropwizard-gradle
compile: 'com.yammer.dropwizard:dropwizard-migrations:' + dropwizardVersion,
https://github.com/gini/dropwizard-gradle
compile: 'com.yammer.dropwizard:dropwizard-auth:' + dropwizardVersion,
https://github.com/Bersh/Avtopoisk
compile: compile "com.google.code.findbugs:jsr305:+"
		runtime project(':launcher')
apply from: 'gradle/root/ide.gradle'
apply from: 'gradle/root/gradle-fix.gradle'
apply from: 'gradle/java-library.gradle'
apply from: 'gradle/license.gradle'
apply from: 'gradle/root/coverage.gradle'
apply from: 'gradle/mockito-core/inline-mock.gradle'
apply from: 'gradle/mockito-core/osgi.gradle'
apply from: 'gradle/mockito-core/javadoc.gradle'
apply from: 'gradle/mockito-core/testing.gradle'
apply from: 'gradle/dependencies.gradle'
https://github.com/mockito/mockito
compile: compile libraries.bytebuddy, libraries.bytebuddyagent
apply from: 'gradle/root/ide.gradle'
apply from: 'gradle/root/gradle-fix.gradle'
apply from: 'gradle/java-library.gradle'
apply from: 'gradle/license.gradle'
apply from: 'gradle/root/coverage.gradle'
apply from: 'gradle/mockito-core/inline-mock.gradle'
apply from: 'gradle/mockito-core/osgi.gradle'
apply from: 'gradle/mockito-core/javadoc.gradle'
apply from: 'gradle/mockito-core/testing.gradle'
apply from: 'gradle/dependencies.gradle'
https://github.com/mockito/mockito
compileOnly: compileOnly libraries.junit4, libraries.hamcrest
apply from: 'gradle/root/ide.gradle'
apply from: 'gradle/root/gradle-fix.gradle'
apply from: 'gradle/java-library.gradle'
apply from: 'gradle/license.gradle'
apply from: 'gradle/root/coverage.gradle'
apply from: 'gradle/mockito-core/inline-mock.gradle'
apply from: 'gradle/mockito-core/osgi.gradle'
apply from: 'gradle/mockito-core/javadoc.gradle'
apply from: 'gradle/mockito-core/testing.gradle'
apply from: 'gradle/dependencies.gradle'
https://github.com/mockito/mockito
compile: compile libraries.objenesis
apply from: 'gradle/root/ide.gradle'
apply from: 'gradle/root/gradle-fix.gradle'
apply from: 'gradle/java-library.gradle'
apply from: 'gradle/license.gradle'
apply from: 'gradle/root/coverage.gradle'
apply from: 'gradle/mockito-core/inline-mock.gradle'
apply from: 'gradle/mockito-core/osgi.gradle'
apply from: 'gradle/mockito-core/javadoc.gradle'
apply from: 'gradle/mockito-core/testing.gradle'
apply from: 'gradle/dependencies.gradle'
https://github.com/mockito/mockito
testCompile: testCompile libraries.asm
apply from: 'gradle/root/ide.gradle'
apply from: 'gradle/root/gradle-fix.gradle'
apply from: 'gradle/java-library.gradle'
apply from: 'gradle/license.gradle'
apply from: 'gradle/root/coverage.gradle'
apply from: 'gradle/mockito-core/inline-mock.gradle'
apply from: 'gradle/mockito-core/osgi.gradle'
apply from: 'gradle/mockito-core/javadoc.gradle'
apply from: 'gradle/mockito-core/testing.gradle'
apply from: 'gradle/dependencies.gradle'
https://github.com/mockito/mockito
testCompile: testCompile libraries.assertj
apply from: 'gradle/root/ide.gradle'
apply from: 'gradle/root/gradle-fix.gradle'
apply from: 'gradle/java-library.gradle'
apply from: 'gradle/license.gradle'
apply from: 'gradle/root/coverage.gradle'
apply from: 'gradle/mockito-core/inline-mock.gradle'
apply from: 'gradle/mockito-core/osgi.gradle'
apply from: 'gradle/mockito-core/javadoc.gradle'
apply from: 'gradle/mockito-core/testing.gradle'
apply from: 'gradle/dependencies.gradle'
https://github.com/mockito/mockito
testRuntime: testRuntime configurations.compileOnly
		compile( 'cascading:cascading-core:2.0.1' ) { exclude group: 'log4j' }
		runtime project(':launcher')
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		compile 'javax.mail:mail:1.4', gradleApi(), fileTree(dir: 'libs', include: '*.jar')
		runtime 'org.apache.ant:ant-javamail:1.8.2',  'javax.mail:mail:1.4', 'javax.activation:activation:1.1.1', fileTree(dir: 'libs', include: '*.jar')
		runtime project(':launcher')
		compile "org.eclipse.jetty.aggregate:jetty-all:${project.property('jetty.version')}"
		compile "org.eclipse.jetty:jetty-annotations:${project.property('jetty.version')}"
		compile "org.eclipse.jetty:jetty-plus:${project.property('jetty.version')}"
		compile "org.eclipse.jetty:jetty-deploy:${project.property('jetty.version')}"
		compile "fish.payara.extras:payara-embedded-web:${project.property('payara.version')}"
		compile "io.bit3:jsass:${project.property('jsass.version')}"
apply from:"https://raw.github.com/breskeby/gradleplugins/master/emmaPlugin/emma.gradle"
https://github.com/optimus-13/birdsquare
compile: compile "org.springframework:spring-core:+"
apply from:"https://raw.github.com/breskeby/gradleplugins/master/emmaPlugin/emma.gradle"
https://github.com/optimus-13/birdsquare
compile: compile "org.springframework:spring-webmvc:+"
apply from:"https://raw.github.com/breskeby/gradleplugins/master/emmaPlugin/emma.gradle"
https://github.com/optimus-13/birdsquare
compile: compile "javax.servlet:javax.servlet-api:+"
apply from:"https://raw.github.com/breskeby/gradleplugins/master/emmaPlugin/emma.gradle"
https://github.com/optimus-13/birdsquare
compile: compile "org.springframework:spring-context:+"
apply from:"https://raw.github.com/breskeby/gradleplugins/master/emmaPlugin/emma.gradle"
https://github.com/optimus-13/birdsquare
compile: compile "org.hibernate:hibernate:+"
apply from:"https://raw.github.com/breskeby/gradleplugins/master/emmaPlugin/emma.gradle"
https://github.com/optimus-13/birdsquare
compile: compile "org.hibernate:hibernate-core:+"
apply from:"https://raw.github.com/breskeby/gradleplugins/master/emmaPlugin/emma.gradle"
https://github.com/optimus-13/birdsquare
testCompile: testCompile "org.springframework:spring-test:+"
apply from:"https://raw.github.com/breskeby/gradleplugins/master/emmaPlugin/emma.gradle"
https://github.com/optimus-13/birdsquare
testCompile: testCompile "junit:junit:+"
		runtime project(':launcher')
		compile "org.springframework.boot:spring-boot-starter-logging"
		compile "org.springframework.boot:spring-boot-starter-actuator"
		compile "org.springframework.boot:spring-boot-autoconfigure"
		compile "org.springframework.boot:spring-boot-starter-tomcat"
		compile "org.grails:grails-dependencies"
		compile "org.grails:grails-web-boot"
		compile "org.grails.plugins:hibernate"
		compile "org.grails.plugins:cache"
		compile "org.hibernate:hibernate-ehcache"
		compile "org.grails.plugins:scaffolding"
		runtime "org.grails.plugins:asset-pipeline"
		testCompile "org.grails:grails-plugin-testing"
		testCompile "org.grails.plugins:geb"
		runtime project(':wrapper')
		runtime project(":installationBeacon")
apply from: "gradle/testGroupings.gradle"
apply from: 'gradle/buildSplits.gradle'
apply from: "gradle/buildScanUserData.gradle"
apply from: "gradle/taskCacheBuildScanUserData.gradle"
apply from: "gradle/incomingDistributions.gradle"
apply from: "gradle/versioning.gradle"
apply from: "gradle/dependencies.gradle"
apply from: "gradle/wrapper.gradle"
apply from: "gradle/idea.gradle"
apply from: "gradle/eclipse.gradle"
apply from: "gradle/classycle.gradle"
apply from: "gradle/strictCompile.gradle"
apply from: "gradle/noDependencyResolutionDuringConfiguration.gradle"
apply from: "gradle/testSetup.gradle"
apply from: "gradle/fix-GRADLE-2492.gradle"
apply from: 'gradle/customM2Check.gradle'
apply from: "$rootDir/gradle/groovyProject.gradle"
apply from: "$rootDir/gradle/testWithUnknownOS.gradle"
apply from: "$rootDir/gradle/java9.gradle"
apply from: "$rootDir/gradle/publish.gradle"
apply from: "$rootDir/gradle/codeQuality.gradle"
apply from: "gradle/intTestImage.gradle"
apply from: 'gradle/pullRequestBuild.gradle'
https://github.com/erdi/gradle
runtime: runtime patchedExternalModules
https://github.com/lawrancej/logisim
compile: compile \
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
https://github.com/EqualExperts/Tayra
compile: compile(project.ext.mongoDriver, project.ext.groovy, project.ext.commonsCli, project.ext.functionaljava, project.ext.log4j)
https://github.com/EqualExperts/Tayra
testCompile: testCompile(project.ext.hamcrest, project.ext.junit, project.ext.mockito, project.ext.spock, project.ext.cglib, project.ext.jdepend)
https://github.com/EqualExperts/Tayra
testRuntime: testRuntime(project.ext.coberturaLib)
		compile "org.springframework:spring-webmvc:${rootProject['versions.spring']}"
		compile "org.springframework:spring-jdbc:${rootProject['versions.spring']}"
		compile "org.slf4j:slf4j-api:${rootProject['versions.slf4j']}"
		testCompile "junit:junit:${rootProject['versions.junit']}"
		runtime project(':launcher')
		runtime project(':launcher')
https://github.com/daimajia/little-bear-dictionary
compile: compile project(':libraries:ActionbarSherlockLibrary')
https://github.com/daimajia/little-bear-dictionary
compile: compile project(':libraries:ColorPickerPreferenceSupportHoloLibrary')
https://github.com/daimajia/little-bear-dictionary
compile: compile project(':libraries:DragSortListViewLibrary')
https://github.com/daimajia/little-bear-dictionary
compile: compile project(':libraries:SlidingMenuLibrary')
https://github.com/daimajia/little-bear-dictionary
compile: compile project(':libraries:StickyHeaderLibrary')
https://github.com/daimajia/little-bear-dictionary
compile: compile project(':libraries:ViewPagerIndicatorLibrary')
https://github.com/daimajia/little-bear-dictionary
compile: compile project(':libraries:HoloEveryWhereLibrary')
https://github.com/daimajia/little-bear-dictionary
compile: compile project(':libraries:AppMsgLibrary')
https://github.com/braxisltd/angular-testacular-gradle-
compile: compile([
https://github.com/braxisltd/angular-testacular-gradle-
testCompile: testCompile([
		runtime project(':launcher')
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		provided 'org.springframework.boot:spring-boot-starter-logging'
		provided "org.springframework.boot:spring-boot-starter-actuator"
		provided "org.springframework.boot:spring-boot-autoconfigure"
		provided "org.springframework.boot:spring-boot-starter-tomcat"
		provided "org.grails:grails-web-boot"
		provided "org.grails:grails-dependencies"
		testCompile "org.grails:grails-plugin-testing"
		runtime project(':launcher')
		runtime project(':launcher')
		compile group: 'org.springframework', name: 'spring-context', version: springVersion
		testCompile group: 'junit', name: 'junit', version: 4.10
		testCompile group: 'org.springframework', name: 'spring-test', version: springVersion
apply from: "jacoco.gradle"
https://github.com/wjwarren/droid-asylum
testCompile: testCompile "org.robolectric:robolectric:+"
apply from: "jacoco.gradle"
https://github.com/wjwarren/droid-asylum
testCompile: testCompile "org.hamcrest:java-hamcrest:+"
		compile group: 'org.jpos.ee', name: 'jposee-core', version: jposeeVersion
		compile group: 'org.jpos.ee', name: 'jposee-txn', version: jposeeVersion
		runtime project(':launcher')
https://github.com/sy-lee/jquerymobile
compile: compile "javax.servlet:javax.servlet-api:+"
https://github.com/sy-lee/jquerymobile
testCompile: testCompile "javax.inject:javax.inject-tck:+"
		compile name: 'tagsoup-1.2.1'
		compile name: 'mail'
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		compile "org.springframework.boot:spring-boot-starter-logging"
		compile "org.springframework.boot:spring-boot-starter-actuator"
		compile "org.springframework.boot:spring-boot-autoconfigure"
		compile "org.springframework.boot:spring-boot-starter-tomcat"
		compile "org.grails:grails-dependencies"
		compile "org.grails:grails-web-boot"
		compile "org.grails.plugins:hibernate"
		compile "org.grails.plugins:cache"
		compile "org.hibernate:hibernate-ehcache"
		runtime "org.grails.plugins:asset-pipeline"
		runtime "org.grails.plugins:scaffolding"
		testCompile "org.grails:grails-plugin-testing"
		testCompile "org.grails.plugins:geb"
		compile (group: 'de.hhu.stups', name: 'tlatools', version: tlatools_version)
		compile (group: 'de.hhu.stups', name: 'prologlib', version: parser_version)
		compile (group: 'de.hhu.stups', name: 'parserbase', version: parser_version)
		compile (group: 'de.hhu.stups', name: 'bparser', version: parser_version)
		compile (group: 'de.hhu.stups', name: 'ltlparser', version: parser_version)
https://github.com/yjw2288/jin-board
testCompile: [compileJava, compileTestJava]*.options*.encoding = fileEncoding
		[compileJava, compileTestJava]*.options*.compilerArgs = ['-Xlint:-options']
		runtime project(':launcher')
		runtime project(':launcher')
apply from: 'uaa/shared_versions.gradle'
apply from: 'uaa/uaa/build_properties.gradle'
https://github.com/cloudfoundry-attic/login-server
compile: compile (project(':cloudfoundry-identity-parent:cloudfoundry-identity-scim')) {
apply from: 'uaa/shared_versions.gradle'
apply from: 'uaa/uaa/build_properties.gradle'
https://github.com/cloudfoundry-attic/login-server
compile: compile(identityCommon) {
		compile group: 'org.springframework', name: 'spring-context-support', version:springVersion
		compile group: 'org.springframework.security', name: 'spring-security-openid', version:springSecurityVersion
		runtime group: 'org.springframework.security', name: 'spring-security-config', version:springSecurityVersion
apply from: 'uaa/shared_versions.gradle'
apply from: 'uaa/uaa/build_properties.gradle'
https://github.com/cloudfoundry-attic/login-server
testCompile: testCompile identityCommon.sourceSets.test.output
		testCompile group: 'org.springframework', name: 'spring-test', version:springVersion
		runtime project(':service-api')
		runtime project(':sessions')
		runtime project(':webcore')
		runtime project(':common-api')
		runtime project(':router')
https://github.com/davidsowerby/krail
compile: compile 'com.google.inject.extensions:guice-servlet:' + guiceVersion
https://github.com/davidsowerby/krail
compile: compile 'com.google.inject.extensions:guice-assistedinject:' + guiceVersion
https://github.com/davidsowerby/krail
compile: compile 'org.codehaus.groovy:groovy-all:' + groovyVersion
https://github.com/davidsowerby/krail
compile: compile 'org.slf4j:slf4j-api:' + slf4jVersion
https://github.com/davidsowerby/krail
compile: compile 'org.apache.commons:commons-lang3:' + commonsLangVersion
https://github.com/davidsowerby/krail
compile: compile 'org.apache.shiro:shiro-core:' + shiroVersion
https://github.com/davidsowerby/krail
compile: compile 'org.apache.shiro:shiro-web:' + shiroVersion
https://github.com/davidsowerby/krail
compile: compile 'org.apache.shiro:shiro-guice:' + shiroVersion
https://github.com/davidsowerby/krail
compile: compile 'com.vaadin:vaadin-server:' + vaadinVersion
https://github.com/davidsowerby/krail
compile: compile 'com.vaadin:vaadin-push:' + vaadinVersion
https://github.com/davidsowerby/krail
testCompile: testCompile 'org.assertj:assertj-core:' + assertjVersion
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		runtime project(':launcher')
		runtime project(':launcher')
		provided 'org.springframework.boot:spring-boot-starter-logging'
		provided 'org.springframework.boot:spring-boot-starter-actuator'
		provided 'org.springframework.boot:spring-boot-autoconfigure'
		provided 'org.springframework.boot:spring-boot-starter-tomcat'
		provided 'org.grails:grails-web-boot'
		provided 'org.grails:grails-dependencies'
		testCompile 'org.grails:grails-plugin-testing'
apply from: './libraries.gradle'
https://github.com/hibernate/hibernate-shards
compile: compile( libraries.slf4j_api )
apply from: './libraries.gradle'
https://github.com/hibernate/hibernate-shards
testCompile: testCompile( libraries.junit )  // may already be a transitive dep from testing
apply from: './libraries.gradle'
https://github.com/hibernate/hibernate-shards
testCompile: testCompile( libraries.hsqldb )
apply from: './libraries.gradle'
https://github.com/hibernate/hibernate-shards
testCompile: testCompile( libraries.slf4j_api )
apply from: './libraries.gradle'
https://github.com/hibernate/hibernate-shards
testCompile: testCompile( libraries.mockito )
apply from: './libraries.gradle'
https://github.com/hibernate/hibernate-shards
testRuntime: testRuntime( libraries.slf4j_log4j12 )
apply from: './libraries.gradle'
https://github.com/hibernate/hibernate-shards
testRuntime: testRuntime( libraries.javassist ) // may already be a transitive dep from orm
apply from: "./libraries.gradle"
https://github.com/ammachado/hibernate-shards
compile: compile( libraries.hibernate_orm )
apply from: "./libraries.gradle"
https://github.com/ammachado/hibernate-shards
compile: compile( libraries.logging )
apply from: "./libraries.gradle"
https://github.com/ammachado/hibernate-shards
testCompile: testCompile( libraries.hibernate_testing )
apply from: "./libraries.gradle"
https://github.com/ammachado/hibernate-shards
testCompile: testCompile( libraries.junit )  // may already be a transitive dep from testing
apply from: "./libraries.gradle"
https://github.com/ammachado/hibernate-shards
testCompile: testCompile( libraries.hsqldb )
apply from: "./libraries.gradle"
https://github.com/ammachado/hibernate-shards
testCompile: testCompile( libraries.mockito )
apply from: "./libraries.gradle"
https://github.com/ammachado/hibernate-shards
testRuntime: testRuntime( libraries.h2 )
apply from: "./libraries.gradle"
https://github.com/ammachado/hibernate-shards
testRuntime: testRuntime( libraries.javassist ) // may already be a transitive dep from orm
apply from: "./libraries.gradle"
https://github.com/ammachado/hibernate-shards
testRuntime: testRuntime( libraries.slf4j_api )
apply from: "./libraries.gradle"
https://github.com/ammachado/hibernate-shards
testRuntime: testRuntime( libraries.slf4j_log4j12 )
apply from: "./libraries.gradle"
https://github.com/ammachado/hibernate-shards
testRuntime: testRuntime( libraries.jcl_slf4j )
apply from: "./libraries.gradle"
https://github.com/ammachado/hibernate-shards
testRuntime: testRuntime( libraries.jcl_api )
apply from: "./libraries.gradle"
https://github.com/ammachado/hibernate-shards
testRuntime: testRuntime( libraries.jcl )
https://github.com/necronet/XTradeJerseyimpl
compile: compile (compileLibraries)
		runtime project(':launcher')
		'org.springframework.data:spring-data-jpa',
		compile group: 'asm', name: 'asm', version: asmVersion
		compile group: 'asm', name: 'asm-util', version: asmVersion
		compile group: 'asm', name: 'asm-commons', version: asmVersion
		compile group: 'commons-io', name: 'commons-io', version: commonsIOVersion
		compile project(':framework')
		testCompile project(':framework').configurations.testCompile.allDependencies
		compile project(':sensorManager')
		compile("org.apache.ftpserver:ftpserver-core:1.0.6") { exclude(module: 'slf4j-api') }
		compile("org.grails:grails-spring:2.1.0") { exclude(module: 'org.springframework.uaa.client') }
		runtime project(':launcher')
		runtime project(':launcher')
		runtime project(':wrapper')
		runtime project(':launcher')
		compile "org.elasticsearch:elasticsearch:${project.property('elasticsearch.version')}"
		compile "org.apache.logging.log4j:log4j-api:${project.property('log4j.version')}"
		testCompile "junit:junit:${project.property('junit.version')}"
		testCompile "org.apache.logging.log4j:log4j-core:${project.property('log4j.version')}"
		testCompile "org.elasticsearch.plugin:transport-netty4-client:${project.property('elasticsearch.version')}"
		'lib/arena-client-7.0.8.jar',
		'lib/arena-shared-7.5.1.jar',
		'lib/custom-serialization-1.1.0.jar'
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		runtime project(':launcher')
		compile group: 'org.liquibase', name: 'liquibase-core', version: liquibaseVersion
		testCompile group: 'org.springframework', name: 'spring-test', version: springVersion
		'org.springframework:spring-test',
		compile group: 'org.springframework', name: 'spring-context', version: SPRING_VERSION
		compile group: 'org.springframework', name: 'spring-core', version: SPRING_VERSION
		compile group: 'org.springframework', name: 'spring-beans', version: SPRING_VERSION
		compile group: 'org.springframework', name: 'spring-asm', version: SPRING_VERSION
		compile group: 'org.springframework', name: 'spring-expression', version: SPRING_VERSION
		compile group: 'org.springframework', name: 'spring-web', version: SPRING_VERSION
		compile group: 'org.springframework', name: 'spring-tx', version: SPRING_VERSION
		compile group: 'org.springframework', name: 'spring-web', version: SPRING_VERSION
		compile group: 'org.springframework', name: 'spring-webmvc', version: SPRING_VERSION
		compile group: 'org.springframework', name: 'spring-struts', version: SPRING_VERSION
		testCompile group: 'org.springframework', name: 'spring-test', version: SPRING_VERSION
		compile "org.elasticsearch:elasticsearch:${project.property('elasticsearch.version')}"
		compileOnly "org.apache.logging.log4j:log4j-core:${project.property('log4j.version')}"
		testCompile "junit:junit:${project.property('junit.version')}"
		testCompile "org.apache.logging.log4j:log4j-core:${project.property('log4j.version')}"
		testCompile "org.elasticsearch.plugin:transport-netty4-client:${project.property('elasticsearch.version')}"
		runtime project(':launcher')
		runtime project(':wrapper')
		testCompile group: "junit", name: "junit", version: versions.junit
https://github.com/mdellavo/eyecandy
compile: compile 'com.nineoldandroids:library:+'
https://github.com/mdellavo/eyecandy
compile: compile 'com.google.code.gson:gson:+'
https://github.com/mdellavo/eyecandy
compile: compile 'com.google.android.apps.muzei:muzei-api:+'
		compile project(':orm-android')
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
apply from:"https://raw.github.com/breskeby/gradleplugins/master/emmaPlugin/emma.gradle"
https://github.com/ritikananwani/birdsquare
compile: compile "org.springframework:spring-core:+"
apply from:"https://raw.github.com/breskeby/gradleplugins/master/emmaPlugin/emma.gradle"
https://github.com/ritikananwani/birdsquare
compile: compile "org.springframework:spring-webmvc:+"
apply from:"https://raw.github.com/breskeby/gradleplugins/master/emmaPlugin/emma.gradle"
https://github.com/ritikananwani/birdsquare
compile: compile "javax.servlet:javax.servlet-api:+"
apply from:"https://raw.github.com/breskeby/gradleplugins/master/emmaPlugin/emma.gradle"
https://github.com/ritikananwani/birdsquare
compile: compile "org.springframework:spring-context:+"
apply from:"https://raw.github.com/breskeby/gradleplugins/master/emmaPlugin/emma.gradle"
https://github.com/ritikananwani/birdsquare
compile: compile "org.hibernate:hibernate:+"
apply from:"https://raw.github.com/breskeby/gradleplugins/master/emmaPlugin/emma.gradle"
https://github.com/ritikananwani/birdsquare
compile: compile "org.hibernate:hibernate-core:+"
apply from:"https://raw.github.com/breskeby/gradleplugins/master/emmaPlugin/emma.gradle"
https://github.com/ritikananwani/birdsquare
testCompile: testCompile "org.springframework:spring-test:+"
apply from:"https://raw.github.com/breskeby/gradleplugins/master/emmaPlugin/emma.gradle"
https://github.com/ritikananwani/birdsquare
testCompile: testCompile "junit:junit:+"
https://github.com/UCB-RAC/consent-builder
compile: compile configurations.vaadin
apply from: "$rootDir/maven.gradle"
https://github.com/asavov/spring-hadoop
compile: compile hadoop
		[group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion],
		[group: 'org.apache.commons', name: 'commons-exec', version: commonsExecVersion],
		[group: 'net.socialchange.doctype', name: 'doctype-changer', version: doctypeChangerVersion],
		[group: 'xml-resolver', name: 'xml-resolver', version: xmlResolverVersion],
		[group: 'xerces', name: 'xercesImpl', version: xercesVersion],
		[group: 'saxon', name: 'saxon', version: saxonVersion],
		[group: 'org.codehaus.plexus', name: 'plexus-utils', version: plexusUtilsVersion],
		[group: 'org.apache.xmlgraphics', name: 'fop', version: fopVersion],
		[group: 'org.apache.xmlgraphics', name: 'xmlgraphics-commons', version: xmlGraphicsCommonsVersion],
		[group: 'org.apache.avalon.framework', name: 'avalon-framework-api', version: avalonVersion],
		[group: 'org.apache.avalon.framework', name: 'avalon-framework-impl', version: avalonVersion],
		[group: 'jdom', name: 'jdom', version: jdomVersion],
		[group: 'junit', name: 'junit', version: junitVersion],
		[group: 'org.slf4j', name: 'jcl-over-slf4j', version: slf4jVersion],
		[group: 'org.slf4j', name: 'slf4j-simple', version: slf4jVersion]
apply from: "$rootDir/maven.gradle"
https://github.com/solgit/spring-hadoop
compile: compile hadoop
		compile(name:'android-lib-release', ext:'aar')
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
apply from: "$rootDir/maven.gradle"
https://github.com/garyrussell/spring-hadoop
compile: compile hadoop
		compile project(':engine')
apply from: 'tasks.gradle'
apply from: 'cyclades_java_client_dsl.gradle'
apply from: 'cyclades_java_client_servicebroker_targets.gradle'
https://github.com/cycladessoa/cyclades
compile: compile project(':nyxlets:hello_world')
apply from: 'tasks.gradle'
apply from: 'cyclades_java_client_dsl.gradle'
apply from: 'cyclades_java_client_servicebroker_targets.gradle'
https://github.com/cycladessoa/cyclades
compile: compile project(':nyxlets:service_broker')
apply from: 'tasks.gradle'
apply from: 'cyclades_java_client_dsl.gradle'
apply from: 'cyclades_java_client_servicebroker_targets.gradle'
https://github.com/cycladessoa/cyclades
compile: compile project(':nyxlets:admin')
		runtime project(':launcher')
		runtime project(':wrapper')
		runtime project(':launcher')
		runtime project(':wrapper')
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		runtime project(':launcher')
		runtime project(':wrapper')
https://github.com/moss-zc/tuer
compile: compile project(':D::git-res:GreenDroid:GreenDroid')
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		runtime project(':launcher')
		runtime project(':wrapper')
apply from: "$rootDir/maven.gradle"
https://github.com/luciendra/spring-hadoop
compile: compile hadoop
		compile project(':android-libUtil')
		compile('org.springframework.boot:spring-boot-starter-web')
		compile('org.springframework.boot:spring-boot-starter-data-jpa')
		compile("org.springframework.boot:spring-boot-starter-actuator")
		compile("com.fasterxml.jackson.datatype:jackson-datatype-hibernate5")
		compile("com.fasterxml.jackson.module:jackson-module-kotlin")
		compile project("legacy")
		runtime('com.h2database:h2')
		testCompile('org.springframework.boot:spring-boot-starter-test')
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		runtime project(':launcher')
		runtime project(':wrapper')
		compile project(":framework")
apply from: "https://raw.github.com/visola/root/master/root.gradle"
https://github.com/visola/resource-manager
compile: compile library.closure_compiler
apply from: "https://raw.github.com/visola/root/master/root.gradle"
https://github.com/visola/resource-manager
compile: compile library.yui_compressor
apply from: "https://raw.github.com/visola/root/master/root.gradle"
https://github.com/visola/resource-manager
compile: compile library.javax_servlet
apply from: "https://raw.github.com/visola/root/master/root.gradle"
https://github.com/visola/resource-manager
compile: compile library.javax_jsp
apply from: "https://raw.github.com/visola/root/master/root.gradle"
https://github.com/visola/resource-manager
compile: compile library.commons_io
apply from: "https://raw.github.com/visola/root/master/root.gradle"
https://github.com/visola/resource-manager
compile: compile library.jackson_old_mapper
apply from: "https://raw.github.com/visola/root/master/root.gradle"
https://github.com/visola/resource-manager
compile: compile library.slf4j
apply from: "https://raw.github.com/visola/root/master/root.gradle"
https://github.com/visola/resource-manager
testCompile: testCompile library.jmockit
apply from: "https://raw.github.com/visola/root/master/root.gradle"
https://github.com/visola/resource-manager
testCompile: testCompile library.junit
		compile project(':elasticsearch')
		compile project(':elasticsearch')
		compile project(':elasticsearch')
		compile project(':elasticsearch')
		compile project(':elasticsearch')
		provided 'org.springframework.boot:spring-boot-starter-logging'
		provided "org.springframework.boot:spring-boot-starter-actuator"
		provided "org.springframework.boot:spring-boot-autoconfigure"
		provided "org.springframework.boot:spring-boot-starter-tomcat"
		provided "org.grails:grails-web-boot"
		provided "org.grails:grails-dependencies"
		testCompile "org.grails:grails-plugin-testing"
https://github.com/dtubest/Razor
compile: compile(self4j, javassist, servletApi)
https://github.com/dtubest/Razor
testCompile: testCompile(junit, mockito)
		runtime project(':launcher')
		runtime project(':wrapper')
		compile group:'com.fasterxml.jackson.core', name:'jackson-core', version:jacksonVersion
		compile group:'com.fasterxml.jackson.core', name:'jackson-databind', version:jacksonVersion
		compile group:'com.fasterxml.jackson.module', name:'jackson-module-jaxb-annotations', version:jacksonVersion
		compile group:'com.fasterxml.jackson.dataformat', name:'jackson-dataformat-yaml', version:jacksonVersion
		compile group:'com.fasterxml.jackson.dataformat', name:'jackson-dataformat-xml', version:jacksonVersion
		compile "org.xbib.elasticsearch.plugin:elasticsearch-helper:${versions.'elasticsearch-helper'}"
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		compile group: 'org.springframework.batch', name: 'spring-batch-infrastructure', version: BATCH_VERSION
		compile group: 'org.springframework', name: 'spring-tx', version: SPRING_VERSION
		runtime group: 'org.slf4j', name: 'jcl-over-slf4j', version: SLF4J_VERSION
		compile group: 'org.slf4j', name: 'slf4j-api', version: SLF4J_VERSION
		testCompile group: 'org.spockframework', name: 'spock-core', version: SPOCK_VERSION
		testCompile group: 'org.spockframework', name: 'spock-spring', version: SPOCK_VERSION
		testCompile group: 'org.springframework', name: 'spring-test', version: SPRING_VERSION
apply from: "$rootDir/maven.gradle"
https://github.com/jose1003/spring-hadoop
compile: compile hadoop
		testCompile("org.spockframework:spock-core:$spockVersion") { exclude group: 'org.codehaus.groovy' }
		compile project(':library')
		compile project(':google-play-services_lib')
https://github.com/sensui/trivia
testCompile: testCompile 'junit:junit:+',
https://github.com/sensui/trivia
testCompile: 'org.easytesting:fest-assert:+'
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		compile name: "InventoryTweaks"   , group: "inventorytweaks", version: invtweaks_version, classifier: "deobf"
		compile name: "Armourers-Workshop", group: "riskyken.armourersWorkshop", version: aw_version, classifier: "api"
		compile name: "NotEnoughItems"    , group: "codechicken", version: nei_version, classifier: "dev"
		runtime name: "CodeChickenLib"    , group: "codechicken", version: ccl_version, classifier: "dev"
		runtime name: "CodeChickenCore"   , group: "codechicken", version: ccc_version, classifier: "dev"
		compile name: "Thaumcraft"        , version: tc_version, classifier: "deobf"
		compile name: "Botania"           , group: "vazkii.botania", version: botania_version, classifier: "deobf"
		runtime name: "Baubles"           , group: "com.azanor.baubles", version: baubles_version, classifier: "deobf"
		compile name: "MineTweaker3"      , group: "minetweaker", version: minetweaker_version, classifier: "Dev"
https://github.com/alexthaler/OpenSesameDroid
compile: compile project(':extras:lib-google-play-services')
https://github.com/jonnybbb/gradle-gwt-plugin
testCompile: testCompile libraries.junit, libraries.jmock, libraries.slf4j_jdk14
		runtime project(':launcher')
		runtime project(':wrapper')
		compile project(':geoip-api-java')
		runtime project(':launcher')
		runtime project(':wrapper')
apply from: 'gradle/version.gradle'
apply from: "gradle/ide.gradle"
apply from: 'gradle/coverage.gradle'
apply from: 'gradle/osgi.gradle'
apply from: 'gradle/gradle-fix.gradle'
apply from: 'gradle/javadoc.gradle'
apply from: 'gradle/release.gradle'
apply from: 'gradle/pom.gradle'
https://github.com/bric3/mockito
testRuntime: testRuntime configurations.provided
apply from: "$rootDir/maven.gradle"
https://github.com/kkmishra/spring-hadoop
compile: compile hadoop
apply from: "$rootDir/maven.gradle"
https://github.com/nellaivijay/spring-hadoop
compile: compile hadoop
		runtime project(':launcher')
		runtime project(':wrapper')
		compile("org.springframework:spring-core:${ext.springVersion}") { exclude(module: 'commons-logging') }
		runtime project(':launcher')
		runtime project(':wrapper')
		compile project(':swipeadapter')
https://github.com/shrikanthkr/Mediaplayer
compile: compile 'com.android.support:support-v4:+'
		runtime project(':launcher')
		runtime project(':wrapper')
		runtime project(':launcher')
		runtime project(':wrapper')
		runtime project(':launcher')
		runtime project(':wrapper')
		compile project(':AndroidPlot-Core')
https://github.com/twingly/twingly-search-api-java
compile: compile libs.jaxb
https://github.com/twingly/twingly-search-api-java
testCompile: testCompile libs.betamax
https://github.com/twingly/twingly-search-api-java
testCompile: testCompile libs.junit
https://github.com/twingly/twingly-search-api-java
testCompile: testCompile libs.groovy
https://github.com/twingly/twingly-search-api-java
testCompile: testCompile libs.spock
https://github.com/twingly/twingly-search-api-java
testRuntime: testRuntime libs.cglib
https://github.com/twingly/twingly-search-api-java
testRuntime: testRuntime libs.objenesis
		runtime project(':launcher')
		runtime project(':wrapper')
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		runtime project(':launcher')
		runtime project(':wrapper')
		compile "org.springframework.boot:spring-boot-starter-logging"
		compile "org.springframework.boot:spring-boot-autoconfigure"
		compile "org.grails:grails-core"
		compile "org.springframework.boot:spring-boot-starter-actuator"
		compile "org.springframework.boot:spring-boot-starter-tomcat"
		compile "org.grails:grails-dependencies"
		compile "org.grails:grails-web-boot"
		testCompile "org.grails:grails-plugin-testing"
		compile "org.springframework.boot:spring-boot-starter-logging"
		compile "org.springframework.boot:spring-boot-starter-actuator"
		compile "org.springframework.boot:spring-boot-autoconfigure"
		compile "org.springframework.boot:spring-boot-starter-tomcat"
		compile "org.grails:grails-dependencies"
		compile "org.grails:grails-web-boot"
		compile "org.grails.plugins:hibernate"
		compile "org.grails.plugins:cache"
		compile "org.hibernate:hibernate-ehcache"
		runtime "org.grails.plugins:asset-pipeline"
		runtime "org.grails.plugins:scaffolding"
		testCompile "org.grails:grails-plugin-testing"
		testCompile "org.grails.plugins:geb"
		compile('org.batcha:dummy-project-a:4.2').ext.git = 'https://github.com/bat-cha/dummy-java-project-a.git'
		compile group: 'com.yammer.dropwizard', name: 'dropwizard-core', version: dropwizardVersion
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		compile 'net.slimevoid:SlimevoidLibrary:' + slimevoidVersion + ':dev'
		compile 'org.newdawn.slick:slick'
		runtime project(':launcher')
		runtime project(':wrapper')
		provided project(':gradle-acumen')
		compile(project(':gradle-acumen-api')) {
apply from: './libraries.gradle'
https://github.com/stliu/hibernate-shards
compile: compile( libraries.slf4j_api )
apply from: './libraries.gradle'
https://github.com/stliu/hibernate-shards
testCompile: testCompile( libraries.junit )  // may already be a transitive dep from testing
apply from: './libraries.gradle'
https://github.com/stliu/hibernate-shards
testCompile: testCompile( libraries.hsqldb )
apply from: './libraries.gradle'
https://github.com/stliu/hibernate-shards
testCompile: testCompile( libraries.slf4j_api )
apply from: './libraries.gradle'
https://github.com/stliu/hibernate-shards
testCompile: testCompile( libraries.mockito )
apply from: './libraries.gradle'
https://github.com/stliu/hibernate-shards
testRuntime: testRuntime( libraries.slf4j_log4j12 )
apply from: './libraries.gradle'
https://github.com/stliu/hibernate-shards
testRuntime: testRuntime( libraries.javassist ) // may already be a transitive dep from orm
		compile project(':util')
		compile project(':util')
		compile project(':speakEasy')
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		compile project(':elements/line')
		compile project(':elements/rectangle')
		compile project(':elements/circle')
		compile project(':elements/point')
		compile project(':printers/printName')
		compile project(':printers/printArea')
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		compile group: 'org.slf4j', name: 'slf4j-log4j12', version: slf4jVersion
		compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: slf4jVersion
		compile group: 'org.springframework.security', name: 'spring-security-core', version: springSecurityVersion
		compile group: 'org.springframework.security', name: 'spring-security-taglibs', version: springSecurityVersion
		runtime group: 'org.springframework.security', name: 'spring-security-web', version: springSecurityVersion
		runtime group: 'org.springframework.security', name: 'spring-security-cas', version: springSecurityVersion
		runtime group: 'org.springframework.security', name: 'spring-security-config', version: springSecurityVersion
		compile group: 'edu.internet2.middleware.grouper', name: 'grouperClient', version: grouperVersion
		runtime group: 'net.sf.ehcache', name: 'ehcache-core', version: ehcacheVersion
		compile group: 'org.slf4j', name: 'slf4j-log4j12', version: slf4jVersion
		compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: slf4jVersion
		compile group: 'org.apache.shiro', name: 'shiro-core', version: shiroVersion
		runtime group: 'org.apache.shiro', name: 'shiro-web', version: shiroVersion
		runtime group: 'org.apache.shiro', name: 'shiro-cas', version: shiroVersion
		compile group: 'edu.internet2.middleware.grouper', name: 'grouperClient', version: grouperVersion
		runtime group: 'commons-codec', name: 'commons-codec', version: commonsCodecVersion
		runtime group: 'org.opensaml', name: 'opensaml', version: openSamlVersion
		runtime group: 'org.apache.santuario', name: 'xmlsec', version: xmlcesVersion
		compile group: 'org.jboss.netty', name: 'netty', version: project.hasProperty('gpars_nettyVersion') ? gpars_nettyVersion : '3.2.7.Final'
		testCompile group: 'junit', name: 'junit', version: project.hasProperty('gpars_junitVersion') ? gpars_junitVersion : '4.10'
		testCompile group: 'org.spockframework', name: 'spock-core', version: project.hasProperty('gpars_spockVersion') ? gpars_spockVersion : '0.7-groovy-2.0'
		compile project(':library')
https://github.com/andreynovikov/Androzic
compile: compile project(':libraries:drag-sort-listview:library')
https://github.com/andreynovikov/Androzic
compile: compile project(':libraries:color-picker-view:library')
https://github.com/andreynovikov/Androzic
compile: compile project(':libraries:mapsforge')
		compile( 'cascading:cascading-core:2.0.1' ) { exclude group: 'log4j' }
		runtime project(':launcher')
		runtime project(':wrapper')
		testCompile group: 'org.spockframework', name: 'spock-core', version : '0.7-groovy-2.0'
https://github.com/andreynovikov/androzic-library
compile: compile project(':libraries:geo-coordinate-conversion')
		['core', 'hibernate', 'plugin-datasource', 'plugin-domain-class'].each { plugin ->
		compile group: 'org.yaml', name: 'snakeyaml', version: snakeYamlVersion
		compile group: 'org.springframework', name: 'spring-aop', version: springVersion
		compile group: 'org.springframework', name: 'spring-beans', version: springVersion
		compile group: 'org.springframework', name: 'spring-core', version: springVersion
		compile group: 'org.springframework', name: 'spring-context', version: springVersion
		compile group: 'org.springframework', name: 'spring-tx', version: springVersion
		compile group: 'org.springframework', name: 'spring-orm', version: springVersion
		compile group: 'org.springframework', name: 'spring-jdbc', version: springVersion
		compile group: 'org.springframework', name: 'spring-web', version: springVersion
		compile group: 'org.springframework', name: 'spring-webmvc', version: springVersion
		compile group: 'org.springframework', name: 'spring-context-support', version: springVersion
		compile group: 'org.springframework.data', name: 'spring-data-jpa', version: springDataJpaVersion
		compile group: 'org.springframework.data', name: 'spring-data-rest-webmvc', version: springDataRestVersion
		compile group: 'org.hibernate', name: 'hibernate-core', version: hibernateVersion
		compile group: 'org.hibernate', name: 'hibernate-validator', version: hibernateValidatorVersion
		runtime group: 'org.hibernate', name: 'hibernate-entitymanager', version: hibernateVersion
		compile group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.0-api', version: jpa2Version
		compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
		runtime group: 'org.slf4j', name: 'jcl-over-slf4j', version: slf4jVersion
		runtime group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
		runtime group: 'org.codehaus.groovy', name: 'groovy', version: groovyVersion
		compile group: 'commons-lang', name: 'commons-lang', version: commonsLangVersion
		compile group: 'com.google.guava', name: 'guava', version: guavaVersion
		compile group: 'postgresql', name: 'postgresql', version: postgresqlVersion
		compile group: 'org.codehaus.jackson', name: 'jackson-core-lgpl', version: jacksonVersion
		compile group: 'org.codehaus.jackson', name: 'jackson-mapper-lgpl', version: jacksonVersion
		compile group: 'net.sf.ehcache', name: 'ehcache-core', version: ehcacheVersion
		compile group: 'c3p0', name: 'c3p0', version: c3p0Version
		compile group: 'joda-time', name: 'joda-time', version: jodaVersion
		providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: servletVersion
		testCompile group: 'junit', name: 'junit', version: junitVersion
		testCompile group: 'org.mockito', name: 'mockito-all', version: mockitoVersion
		testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: powermockVersion
		testCompile group: 'org.powermock', name: 'powermock-api-mockito', version: powermockVersion
		testCompile group: 'org.springframework', name: 'spring-test', version: springVersion
https://github.com/phpusr/ugatu-BusStop
runtime: runtime 'com.intellij:forms_rt:'+              libraryVersions.forms_rt
https://github.com/ANDLABS-Git/AndEngine-Utils
compile: compile project(':Dropbox:Code:AndEnginePhysicsBox2DExtension')
https://github.com/ANDLABS-Git/AndEngine-Utils
compile: compile project(':Dropbox:Code:AndEngine')
		runtime project(':launcher')
		runtime project(':wrapper')
		testCompile( 'org.spockframework:spock-core:0.7-groovy-1.8' ) { exclude group: 'org.codehaus.groovy' }
		testCompile project(':TddAndroid')
		compile project(':MMMLib')
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
		runtime project(':launcher')
		runtime project(':wrapper')
		runtime project(':launcher')
		runtime project(':wrapper')
		compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: ext.kotlin_version
		runtime project(':launcher')
		runtime project(':wrapper')
		compile(name:'kinvey-android-lib-2.10.4', ext:'aar')
		runtime project(':launcher')
		runtime project(':wrapper')
		runtime project(':launcher')
		runtime project(':wrapper')
apply from: "$rootDir/maven.gradle"
https://github.com/tonilap/spring-hadoop
compile: compile hadoop
		runtime project(':launcher')
		runtime project(':wrapper')
https://github.com/cjstehno/photopile
compile: compile groovySpec
		compile 'org.springframework.boot:spring-boot-starter-logging'
		compile 'org.springframework.boot:spring-boot-starter-web'
		compile 'org.springframework.boot:spring-boot-starter-actuator'
		compile('org.springframework.boot:spring-boot-starter-remote-shell') {
		compile 'org.springframework.boot:spring-boot-starter-security'
		compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
		compile 'org.springframework.boot:spring-boot-starter-jdbc'
		compile 'com.fasterxml.jackson.core:jackson-databind'
		compile 'org.flywaydb:flyway-core'
		compile 'com.codahale.metrics:metrics-core'
		testCompile 'junit:junit'
		testCompile 'com.jayway.jsonpath:json-path'
		testCompile 'org.springframework.boot:spring-boot-starter-test'
		compile project(':MMMLib')
		compile project(':MMMLib')
		compile group: 'com.yammer.dropwizard', name: 'dropwizard-core', version: dropwizardVersion
		compile group: 'com.yammer.dropwizard', name: 'dropwizard-hibernate', version: dropwizardVersion
		compile group: 'com.yammer.dropwizard', name: 'dropwizard-migrations', version: dropwizardVersion
		compile group: 'com.yammer.dropwizard', name: 'dropwizard-auth', version: dropwizardVersion
		testCompile group: 'junit', name: 'junit', version: junitVersion
		compile group: 'javax.ws.rs', name: 'jsr311-api', version: jaxRsVersion
		runtime group: 'com.sun.jersey', name: 'jersey-server', version: jerseyVersion
		runtime group: 'com.sun.jersey', name: 'jersey-servlet', version: jerseyVersion
		runtime group: 'com.sun.jersey', name: 'jersey-core', version: jerseyVersion
		runtime group: 'com.sun.jersey.contribs', name: 'jersey-spring', version: jerseyVersion
		runtime group: 'org.springframework', name: 'spring-web', version: springVersion
		compile group: 'org.springframework', name: 'spring-context', version: springVersion
		compile group: 'org.jasypt', name: 'jasypt', version: jasyptVersion
		compile group: 'org.jasypt', name: 'jasypt-spring31', version: jasyptVersion
		compile group: 'org.slf4j', name: 'slf4j-log4j12', version: slf4jVersion
		compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: slf4jVersion
		runtime project(':launcher')
		runtime project(':wrapper')
apply from: "liquibase.gradle"
apply from: "assets.gradle"
https://github.com/MrBillA/gradle-template-example
compile: compile(it) {
		testCompile 'org.springframework.boot:spring-boot-starter-test'
		compile 'org.springframework.boot:spring-boot-devtools'
		compile 'org.springframework.boot:spring-boot-starter-web'
		compile 'org.springframework.boot:spring-boot-starter-security'
		compile 'org.springframework.boot:spring-boot-starter-data-jpa'
		compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
		compile(name:'android-lib-release', ext:'aar')
		testCompile project(':groovy-ant')
		testCompile project(':groovy-test')
apply from: "${rootProject.projectDir}/dependencies.gradle"
https://github.com/kenshoo/rally-updator
compile: compile libraries.spring_core
apply from: "${rootProject.projectDir}/dependencies.gradle"
https://github.com/kenshoo/rally-updator
compile: compile libraries.spring_context
apply from: "${rootProject.projectDir}/dependencies.gradle"
https://github.com/kenshoo/rally-updator
compile: compile libraries.spring_web
apply from: "${rootProject.projectDir}/dependencies.gradle"
https://github.com/kenshoo/rally-updator
compile: compile libraries.commons_loggins
apply from: "${rootProject.projectDir}/dependencies.gradle"
https://github.com/kenshoo/rally-updator
compile: compile libraries.jackson
apply from: "${rootProject.projectDir}/dependencies.gradle"
https://github.com/kenshoo/rally-updator
compile: compile libraries.commons_client
apply from: "${rootProject.projectDir}/dependencies.gradle"
https://github.com/kenshoo/rally-updator
compile: compile libraries.junit
		runtime project(':launcher')
		runtime project(':wrapper')
		compile group: 'com.typesafe.akka', name: "akka-actor_$scalaMinorVersion", version: akkaVersion
		compile group: 'com.typesafe.akka', name: "akka-persistence-experimental_$scalaMinorVersion", version: akkaVersion
		testCompile( 'org.spockframework:spock-core:0.7-groovy-1.8' ) { exclude group: 'org.codehaus.groovy' }
		compile 'org.newdawn.slick:slick'
		testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
		compile module(':idea') {
apply from: rootProject.file("gradle/${database}.gradle")
apply from: 'gradle/publish.gradle'
https://github.com/msimons/elasticsearch-jdbc
compile: compile 'org.elasticsearch:elasticsearch:' + versions.elasticsearch
		compile 'org.xbib.elasticsearch.plugin:elasticsearch-helper:' + versions.'elasticsearch-helper'
apply from: rootProject.file("gradle/${database}.gradle")
apply from: 'gradle/publish.gradle'
https://github.com/msimons/elasticsearch-jdbc
compile: compile 'org.apache.logging.log4j:log4j-slf4j-impl:' + versions.log4j
apply from: rootProject.file("gradle/${database}.gradle")
apply from: 'gradle/publish.gradle'
https://github.com/msimons/elasticsearch-jdbc
compile: compile 'org.apache.logging.log4j:log4j-core:'+ versions.log4j
apply from: rootProject.file("gradle/${database}.gradle")
apply from: 'gradle/publish.gradle'
https://github.com/msimons/elasticsearch-jdbc
compile: compile('com.vividsolutions:jts:' + versions.jts) {
apply from: rootProject.file("gradle/${database}.gradle")
apply from: 'gradle/publish.gradle'
https://github.com/msimons/elasticsearch-jdbc
testCompile: testCompile 'org.testng:testng:' + versions.testng
apply from: rootProject.file("gradle/${database}.gradle")
apply from: 'gradle/publish.gradle'
https://github.com/msimons/elasticsearch-jdbc
testCompile: testCompile 'net.java.dev.jna:j